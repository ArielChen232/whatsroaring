{"ast":null,"code":"import _classCallCheck from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/leitan/Developer/whatsroaring/src/Pages/Calendar.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport moment from 'moment';\nimport BigCalendar from 'react-big-calendar'; // Styling\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport './Calendar.css';\nvar localizer = BigCalendar.momentLocalizer(moment);\nvar url = 'https://whatsroaring-api.herokuapp.com/getEvents';\nvar orange = '#fb8c00';\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.seeDetails = function (event) {\n      _this.props.changeToDetails(event.title, event.start, event.end, event.desc, event.location, event.website, event.org, event.is_free);\n\n      _this.props.history.push('/details');\n    };\n\n    _this.state = {\n      events: []\n    };\n    _this._isMounted = false;\n    _this.eventStyleGetter = _this.eventStyleGetter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(url).then(function (res) {\n        var posts = JSON.parse(res.data.Events_JSON);\n        var events = [];\n        posts.forEach(function (post) {\n          events.push({\n            title: post.fields.name,\n            start: new Date(post.fields.start_datetime),\n            end: new Date(post.fields.end_datetime),\n            desc: post.fields.description,\n            location: post.fields.location,\n            website: post.fields.website,\n            org: post.fields.org,\n            is_free: post.fields.is_free\n          });\n        });\n\n        _this2.setState({\n          events: events\n        });\n\n        _this2._isMounted = true;\n      });\n    }\n  }, {\n    key: \"eventStyleGetter\",\n    value: function eventStyleGetter(event) {\n      var color = orange;\n      /* Can add logic here to color code */\n\n      var style = {\n        backgroundColor: color,\n        opacity: 0.8,\n        color: 'black',\n        border: '0px'\n      };\n      return {\n        style: style\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(BigCalendar, {\n        localizer: localizer,\n        events: this.state.events,\n        defaultView: BigCalendar.Views.MONTH,\n        onSelectEvent: this.seeDetails,\n        views: ['month', 'week', 'day'],\n        eventPropGetter: this.eventStyleGetter // titleAccessor=\"fields.name\"\n        // startAccessor=\"fields.start_datetime\"\n        // endAccessor=\"fields.end_datetime\"\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nexport default withRouter(Calendar);","map":{"version":3,"sources":["/Users/leitan/Developer/whatsroaring/src/Pages/Calendar.js"],"names":["React","Component","withRouter","connect","axios","moment","BigCalendar","localizer","momentLocalizer","url","orange","Calendar","args","seeDetails","event","props","changeToDetails","title","start","end","desc","location","website","org","is_free","history","push","state","events","_isMounted","eventStyleGetter","bind","get","then","res","posts","JSON","parse","data","Events_JSON","forEach","post","fields","name","Date","start_datetime","end_datetime","description","setState","color","style","backgroundColor","opacity","border","Views","MONTH"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport moment from 'moment'\nimport BigCalendar from 'react-big-calendar'\n\n// Styling\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport './Calendar.css'\n\n\nconst localizer = BigCalendar.momentLocalizer(moment)\nconst url = 'https://whatsroaring-api.herokuapp.com/getEvents'\nconst orange = '#fb8c00'\n\n\nclass Calendar extends Component {\n  constructor(...args) {\n    super(...args)\n    this.state = { events: [] }\n    this._isMounted = false\n    this.eventStyleGetter = this.eventStyleGetter.bind(this)\n  }\n\n  componentDidMount() {\n    axios.get(url).then(res => {\n      const posts = JSON.parse(res.data.Events_JSON)\n      const events = [];\n      posts.forEach(function(post){\n        events.push({\n          title: post.fields.name, \n          start: new Date(post.fields.start_datetime), \n          end: new Date(post.fields.end_datetime),\n          desc: post.fields.description,\n          location: post.fields.location,\n          website: post.fields.website,\n          org: post.fields.org,\n          is_free: post.fields.is_free\n        });\n      });\n      this.setState({events})\n      this._isMounted = true\n    })\n  }\n\n  seeDetails = (event) => {\n    this.props.changeToDetails(\n      event.title, \n      event.start, \n      event.end,\n      event.desc,\n      event.location,\n      event.website,\n      event.org,\n      event.is_free);\n    this.props.history.push('/details')\n  }\n\n  eventStyleGetter(event) {\n    var color = orange\n    /* Can add logic here to color code */\n    var style = {\n      backgroundColor: color,\n      opacity: 0.8,\n      color: 'black',\n      border: '0px'\n    }\n    return {\n      style: style\n    }\n  }\n\n  render() {\n    return (\n      <div className='Calendar'>\n        <BigCalendar\n          localizer={localizer}\n          events={this.state.events}\n          defaultView={BigCalendar.Views.MONTH}\n          onSelectEvent={this.seeDetails}\n          views={['month', 'week', 'day']}\n          eventPropGetter={(this.eventStyleGetter)}\n          // titleAccessor=\"fields.name\"\n          // startAccessor=\"fields.start_datetime\"\n          // endAccessor=\"fields.end_datetime\"\n        />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Calendar)\n\n"]},"metadata":{},"sourceType":"module"}