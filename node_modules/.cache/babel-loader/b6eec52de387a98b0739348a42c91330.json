{"ast":null,"code":"import _classCallCheck from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nvar Cas = function Cas() {\n  var _this = this;\n\n  _classCallCheck(this, Cas);\n\n  this.casURL = 'https://fed.princeton.edu/cas/';\n\n  this.validate = function (ticket) {\n    var val_url = _this.casURL + 'validate?service=' + encodeURIComponent(_this.serviceURL()) + '&ticket=' + encodeURIComponent(ticket);\n    console.log('validate url = ' + val_url);\n    var request = new XMLHttpRequest();\n    request.open('GET', val_url, true);\n    request.send();\n\n    request.onreadystatechange = function () {\n      console.log('url opened');\n\n      if (request.readyState === 4 && request.status === 200) {\n        var lines = request.responseText;\n        console.log('lines' + lines);\n        return lines;\n      }\n    };\n\n    console.log(\"didn't read correctly\");\n    return null;\n  };\n\n  this.authenticate = function () {\n    // const query = new URLSearchParams(window.location.href)\n    // var ticket = query.get('ticket')\n    var return_url = _this.front_url + 'calendar'; // const return_url = 'http://whatsroaring.herokuapp.com/?netid='\n    // var ticket = window.location.search.replace(\"?\", ''); // remove the ?\n\n    var urlParams = new URLSearchParams(window.location.search);\n    var ticket = urlParams.get('ticket');\n    console.log('ticket: ' + ticket);\n\n    if (ticket) {\n      console.log('ticket received');\n\n      var netid = _this.validate(ticket);\n\n      if (netid) {\n        sessionStorage.setItem('netid', netid); // window.location.href = return_url\n\n        return;\n      }\n    } // No valid ticket; redirect the browser to the login page to get one\n\n\n    console.log('no ticket found');\n    var login_url = _this.casURL + 'login?service=' + encodeURIComponent(_this.front_url);\n    console.log('Location: ' + login_url); // window.location.href = login_url\n  };\n\n  this.serviceURL = function () {\n    var url = window.location.href; // Remove the \"ticket\" parameter from the URL.\n\n    url = url.split(\"?\")[0]; // Remove a trailing question mark and/or ampersand.\n\n    url = url.replace(\"\\\\?&?$|&$\", \"\"); // add calendar extension\n\n    url = url + '/calendar';\n    console.log('url:' + url);\n    return url;\n  };\n};\n\nexport { Cas as default };","map":{"version":3,"sources":["/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/src/Pages/CASClient.js"],"names":["React","Component","withRouter","Cas","casURL","validate","ticket","val_url","encodeURIComponent","serviceURL","console","log","request","XMLHttpRequest","open","send","onreadystatechange","readyState","status","lines","responseText","authenticate","return_url","front_url","urlParams","URLSearchParams","window","location","search","get","netid","sessionStorage","setItem","login_url","url","href","split","replace"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;IAEqBC,G;;;;;OACnBC,M,GAAS,gC;;OAETC,Q,GAAW,UAACC,MAAD,EAAY;AACrB,QAAMC,OAAO,GAAI,KAAI,CAACH,MAAL,GAAc,mBAAd,GACbI,kBAAkB,CAAC,KAAI,CAACC,UAAL,EAAD,CADL,GAC2B,UAD3B,GAEbD,kBAAkB,CAACF,MAAD,CAFtB;AAGAI,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBJ,OAAhC;AACA,QAAIK,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoBP,OAApB,EAA6B,IAA7B;AACAK,IAAAA,OAAO,CAACG,IAAR;;AACAH,IAAAA,OAAO,CAACI,kBAAR,GAA6B,YAAY;AACvCN,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,UAAIC,OAAO,CAACK,UAAR,KAAuB,CAAvB,IAA4BL,OAAO,CAACM,MAAR,KAAmB,GAAnD,EAAwD;AACtD,YAAIC,KAAK,GAAGP,OAAO,CAACQ,YAApB;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAUQ,KAAtB;AACA,eAAOA,KAAP;AACC;AACF,KAPH;;AAQAT,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,WAAO,IAAP;AACD,G;;OAEDU,Y,GAAe,YAAM;AACnB;AACA;AACA,QAAMC,UAAU,GAAG,KAAI,CAACC,SAAL,GAAiB,UAApC,CAHmB,CAInB;AACA;;AAEA,QAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAlB;AACA,QAAMtB,MAAM,GAAGkB,SAAS,CAACK,GAAV,CAAc,QAAd,CAAf;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaL,MAAzB;;AACA,QAAIA,MAAJ,EAAY;AACVI,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,UAAImB,KAAK,GAAG,KAAI,CAACzB,QAAL,CAAcC,MAAd,CAAZ;;AACA,UAAIwB,KAAJ,EAAW;AACPC,QAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCF,KAAhC,EADO,CAEP;;AACA;AACD;AACJ,KAlBkB,CAmBnB;;;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,QAAIsB,SAAS,GAAG,KAAI,CAAC7B,MAAL,GAAc,gBAAd,GAAiCI,kBAAkB,CAAC,KAAI,CAACe,SAAN,CAAnE;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAesB,SAA3B,EAtBmB,CAuBnB;AACD,G;;OAEDxB,U,GAAa,YAAM;AACjB,QAAIyB,GAAG,GAAGR,MAAM,CAACC,QAAP,CAAgBQ,IAA1B,CADiB,CAEjB;;AACAD,IAAAA,GAAG,GAAGA,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAN,CAHiB,CAIjB;;AACAF,IAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,WAAZ,EAAyB,EAAzB,CAAN,CALiB,CAMjB;;AACAH,IAAAA,GAAG,GAAGA,GAAG,GAAG,WAAZ;AACAxB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAASuB,GAArB;AACA,WAAOA,GAAP;AACD,G;;;SA3DkB/B,G","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nexport default class Cas {\n  casURL = 'https://fed.princeton.edu/cas/'\n\n  validate = (ticket) => {\n    const val_url = (this.casURL + 'validate?service=' +\n        encodeURIComponent(this.serviceURL()) + '&ticket=' +\n        encodeURIComponent(ticket))\n    console.log('validate url = ' + val_url)\n    var request = new XMLHttpRequest();\n    request.open('GET', val_url, true);\n    request.send();\n    request.onreadystatechange = function () {\n      console.log('url opened')\n      if (request.readyState === 4 && request.status === 200) {\n        var lines = request.responseText;\n        console.log('lines' + lines)\n        return lines\n        }\n      }\n    console.log(\"didn't read correctly\")\n    return null\n  }\n\n  authenticate = () => {\n    // const query = new URLSearchParams(window.location.href)\n    // var ticket = query.get('ticket')\n    const return_url = this.front_url + 'calendar'\n    // const return_url = 'http://whatsroaring.herokuapp.com/?netid='\n    // var ticket = window.location.search.replace(\"?\", ''); // remove the ?\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const ticket = urlParams.get('ticket');\n    console.log('ticket: ' + ticket)\n    if (ticket) {\n      console.log('ticket received')\n      var netid = this.validate(ticket)\n      if (netid) {\n          sessionStorage.setItem('netid', netid)\n          // window.location.href = return_url\n          return\n        }\n    }\n    // No valid ticket; redirect the browser to the login page to get one\n    console.log('no ticket found')\n    var login_url = this.casURL + 'login?service=' + encodeURIComponent(this.front_url)\n    console.log('Location: ' + login_url)\n    // window.location.href = login_url\n  }\n\n  serviceURL = () => {\n    var url = window.location.href;\n    // Remove the \"ticket\" parameter from the URL.\n    url = url.split(\"?\")[0];\n    // Remove a trailing question mark and/or ampersand.\n    url = url.replace(\"\\\\?&?$|&$\", \"\");\n    // add calendar extension\n    url = url + '/calendar'\n    console.log('url:' + url)\n    return url;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}