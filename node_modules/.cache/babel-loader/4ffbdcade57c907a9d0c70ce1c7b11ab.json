{"ast":null,"code":"import _defineProperty from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/leitan/Developer/whatsroaring/src/Pages/CreateEvent.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Theme from '../Assets/Theme';\nimport Header from './Components/Header';\nimport HomeButton from './Components/HomeButton';\nimport './CreateEvent.css';\n\nvar axios = require('axios');\n\nvar url = 'http://whatsroaring-api.herokuapp.com/'; //const url = 'http://127.0.0.1:8000/'\n\nvar ITEM_HEIGHT = 48;\nvar ITEM_PADDING_TOP = 8;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    },\n    dateTimePicker: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    },\n    select: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    },\n    dense: {\n      marginTop: 19\n    }\n  };\n};\n\nvar CreateEvent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateEvent, _Component);\n\n  function CreateEvent(props) {\n    var _this;\n\n    _classCallCheck(this, CreateEvent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateEvent).call(this, props));\n\n    _this.goBack = function () {\n      _this.props.history.goBack();\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.handleDateChange = function (name) {\n      return function (date) {\n        _this.setState(_defineProperty({}, name, date.target.value));\n      };\n    };\n\n    _this.submitEvent = function () {\n      var url_event = url + 'createEvent';\n      console.log('Name: ' + _this.state.name);\n      console.log('Org: ' + _this.state.org);\n      console.log('Category: ' + _this.state.category);\n      console.log('Start time: ' + _this.state.startTime);\n      console.log('End time: ' + _this.state.endTime);\n      console.log('Website: ' + _this.state.website);\n      console.log('Description: ' + _this.state.description);\n      console.log('Is free: ' + _this.state.isFree);\n      var errors = [];\n\n      if (_this.state.name === '') {\n        errors.push('Enter a name for your event.');\n      }\n\n      if (_this.state.organization === '') {\n        errors.push('Enter an organization for your event.');\n      }\n\n      if (_this.state.location === '') {\n        errors.push('Enter a location for your event.');\n      }\n\n      if (_this.state.startTime === null) {\n        errors.push('Enter a start time for your event.');\n      }\n\n      if (_this.state.endTime === null) {\n        errors.push('Enter an end time for your event.');\n      }\n\n      _this.setState({\n        displayError: errors\n      });\n\n      if (errors.length === 0) {\n        console.log('Start time: ' + _this.state.startTime.toLocaleString());\n        axios.post(url_event, {\n          params: {\n            name: _this.state.name,\n            org: _this.state.org,\n            cat: _this.state.category,\n            start_datetime: _this.state.startTime,\n            end_datetime: _this.state.endTime,\n            location: _this.state.location,\n            website: _this.state.website,\n            description: _this.state.description,\n            is_free: _this.state.isFree\n          }\n        }).then(function (response) {\n          if (response.data === 'Created event') {\n            _this.goBack();\n          } else {\n            console.log('error');\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    };\n\n    _this.state = {\n      name: '',\n      org: '',\n      category: [],\n      description: '',\n      location: '',\n      isFree: '',\n      website: '',\n      startTime: '',\n      endTime: '',\n      displayError: [],\n      categories: [],\n      organizations: []\n    };\n    return _this;\n  }\n\n  _createClass(CreateEvent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Fill categories menu\n      var url_cats = url + 'getCategories';\n      var cats_arr = [];\n      axios.get(url_cats).then(function (res) {\n        var cats = res.data.cats;\n\n        for (var i = 0; i < cats.length; i++) {\n          cats_arr.push(cats[i]);\n        }\n\n        _this2.setState({\n          categories: cats_arr\n        });\n\n        console.log(_this2.state.categories);\n      }).catch(function (err) {\n        console.log(err);\n      }); // Fill organizations menu\n\n      var url_orgs = url + 'getOrganizations';\n      var orgs_arr = [];\n      axios.get(url_orgs).then(function (res) {\n        var orgs = res.data.orgs;\n\n        for (var i = 0; i < orgs.length; i++) {\n          orgs_arr.push(orgs[i]);\n        }\n\n        orgs_arr.sort();\n\n        _this2.setState({\n          organizations: orgs_arr\n        });\n\n        console.log(_this2.state.organizations);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: \"page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(MuiThemeProvider, {\n        theme: Theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(HomeButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        className: \"paper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h3\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Create Event\"), React.createElement(\"div\", {\n        className: \"fields\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"event-name\",\n        label: \"Event Name\",\n        className: classes.textField,\n        value: this.state.name,\n        onChange: this.handleChange('name'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"event-description\",\n        label: \"Description\",\n        className: classes.textField,\n        value: this.state.description,\n        onChange: this.handleChange('description'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"event-location\",\n        label: \"Event Location\",\n        className: classes.textField,\n        value: this.state.location,\n        onChange: this.handleChange('location'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"event-website\",\n        label: \"Event Website\",\n        className: classes.textField,\n        value: this.state.website,\n        onChange: this.handleChange('website'),\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"datetime-local\",\n        label: \"Start Date & Time\",\n        type: \"datetime-local\",\n        className: classes.textField,\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: this.handleDateChange('startTime'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"datetime-local\",\n        label: \"End Date & Time\",\n        type: \"datetime-local\",\n        className: classes.textField,\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: this.handleDateChange('endTime'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }), React.createElement(InputLabel, {\n        htmlFor: \"outlined-org-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Organization\"), React.createElement(Select, {\n        value: this.state.org,\n        onChange: this.handleChange('org'),\n        className: classes.select,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, this.state.organizations.map(function (organization) {\n        return React.createElement(MenuItem, {\n          key: organization,\n          value: organization,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, organization);\n      }))), React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple-checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Category\"), React.createElement(Select, {\n        multiple: true,\n        value: this.state.category,\n        onChange: this.handleChange('category'),\n        input: React.createElement(Input, {\n          id: \"select-multiple-checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          return selected.join(', ');\n        },\n        className: classes.select,\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, this.state.categories.map(function (category) {\n        return React.createElement(MenuItem, {\n          key: category,\n          value: category,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: _this3.state.category.indexOf(category) > -1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          primary: category,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }));\n      }))), React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"outlined-isfree-simple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Free?\"), React.createElement(Select, {\n        value: this.state.isFree,\n        onChange: this.handleChange('isFree'),\n        className: classes.select,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"Yes\"), React.createElement(MenuItem, {\n        value: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"No\")))), React.createElement(\"div\", {\n        className: \"Button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.submitEvent,\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \"Submit Event\")))))));\n      /*return (\n        <div className=\"CreateEvent\">\n          <Header />\n          <MuiThemeProvider theme={Theme}>\n            <div className='EventPaper'>\n               <HomeButton />\n               <Paper className='EventPaperInner'>\n                <div className='header'>\n                  <Typography variant=\"h3\" color=\"primary\">\n                    Create Event\n                  </Typography>\n                </div>\n                <div className='InnerPageFields'>\n                  <FormControl>\n                    <TextField\n                      id='event-name'\n                      label='Event Name'\n                      className={classes.textField}\n                      value={this.state.name}\n                      onChange={this.handleChange('name')}\n                      margin='normal'\n                      variant='outlined'\n                    />\n                     <TextField\n                      id='event-description'\n                      label='Description'\n                      className={classes.textField}\n                      value={this.state.description}\n                      onChange={this.handleChange('description')}\n                      margin='normal'\n                      variant='outlined'\n                    />\n                     <TextField\n                      id='event-location'\n                      label='Event Location'\n                      className={classes.textField}\n                      value={this.state.location}\n                      onChange={this.handleChange('location')}\n                      margin='normal'\n                      variant='outlined'\n                    />\n                     <TextField\n                      id='event-website'\n                      label='Event Website'\n                      className={classes.textField}\n                      value={this.state.website}\n                      onChange={this.handleChange('website')}\n                      margin='normal'\n                      variant='outlined'\n                    />\n                     <TextField\n                      id=\"datetime-local\"\n                      label=\"Start Date & Time\"\n                      type=\"datetime-local\"\n                      className={classes.textField}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      onChange={this.handleDateChange('startTime')}\n                    />\n                     <TextField\n                      id=\"datetime-local\"\n                      label=\"End Date & Time\"\n                      type=\"datetime-local\"\n                      className={classes.textField}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      onChange={this.handleDateChange('endTime')}\n                    />\n                  </FormControl>\n                </div>\n                 <div className='InnerPageFields'>\n                  <FormControl>\n                    <InputLabel htmlFor=\"outlined-org-simple\">\n                      Organization\n                    </InputLabel>\n                    <Select\n                      value={this.state.org}\n                      onChange={this.handleChange('org')}\n                      className={classes.select}\n                    >\n                      {this.state.organizations.map(organization => (\n                        <MenuItem key={organization} value={organization}>\n                          {organization}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                   <FormControl>\n                    <InputLabel htmlFor=\"select-multiple-checkbox\">Category</InputLabel>\n                    <Select\n                      multiple\n                      value={this.state.category}\n                      onChange={this.handleChange('category')}\n                      input={<Input id=\"select-multiple-checkbox\" />}\n                      renderValue={selected => selected.join(', ')}\n                      className={classes.select}\n                      MenuProps={MenuProps}\n                    >\n                      {this.state.categories.map(category => (\n                        <MenuItem key={category} value={category}>\n                          <Checkbox checked={this.state.category.indexOf(category) > -1} />\n                          <ListItemText primary={category} />\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                   <FormControl>\n                    <InputLabel htmlFor=\"outlined-isfree-simple\">\n                      Free?\n                    </InputLabel>\n                    <Select\n                      value={this.state.isFree}\n                      onChange={this.handleChange('isFree')}\n                      className={classes.select}\n                    >\n                      <MenuItem value={true}>Yes</MenuItem>\n                      <MenuItem value={false}>No</MenuItem>\n                    </Select>\n                  </FormControl>\n                </div>\n                <div className='Button'>\n                  <Button variant=\"contained\" color=\"primary\" onClick={this.submitEvent} size=\"large\">\n                    Submit Event\n                  </Button>\n                </div>\n              </Paper>\n            </div>\n          </MuiThemeProvider>\n        </div>\n      )*/\n    }\n  }]);\n\n  return CreateEvent;\n}(Component);\n\nexport default withStyles(styles)(withRouter(CreateEvent));","map":{"version":3,"sources":["/Users/leitan/Developer/whatsroaring/src/Pages/CreateEvent.js"],"names":["React","Component","withRouter","withStyles","Grid","Paper","Typography","IconButton","ArrowBack","MuiThemeProvider","TextField","InputLabel","MenuItem","FormControl","Select","Input","Button","Checkbox","ListItemText","Theme","Header","HomeButton","axios","require","url","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","dateTimePicker","select","dense","marginTop","CreateEvent","props","goBack","history","handleChange","name","event","setState","target","value","handleDateChange","date","submitEvent","url_event","console","log","state","org","category","startTime","endTime","website","description","isFree","errors","push","organization","location","displayError","length","toLocaleString","post","params","cat","start_datetime","end_datetime","is_free","then","response","data","catch","error","categories","organizations","url_cats","cats_arr","get","res","cats","i","err","url_orgs","orgs_arr","orgs","sort","classes","shrink","map","selected","join","indexOf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowBack from '@material-ui/icons/ArrowBack'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport Input from '@material-ui/core/Input'\nimport Button from '@material-ui/core/Button'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport Theme from '../Assets/Theme'\nimport Header from './Components/Header'\nimport HomeButton from './Components/HomeButton'\n\nimport './CreateEvent.css'\n\nconst axios = require('axios')\nconst url = 'http://whatsroaring-api.herokuapp.com/'\n//const url = 'http://127.0.0.1:8000/'\n\nconst ITEM_HEIGHT = 48\nconst ITEM_PADDING_TOP = 8\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n}\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  dateTimePicker: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  select: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  dense: {\n    marginTop: 19,\n  },\n})\n\n\nclass CreateEvent extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      org: '',\n      category: [],\n      description: '',\n      location: '',\n      isFree: '',\n      website:'',\n      startTime: '',\n      endTime: '',\n      displayError: [],\n      categories: [],\n      organizations: []\n    }\n  }\n\n  componentDidMount() {\n    // Fill categories menu\n    var url_cats = url + 'getCategories'\n    var cats_arr = []\n    axios.get(url_cats).then(res => {\n      var cats = res.data.cats\n      for (var i = 0; i < cats.length; i++) {\n        cats_arr.push(cats[i])\n      }\n      this.setState({categories: cats_arr})\n      console.log(this.state.categories)\n    }).catch(err => {\n      console.log(err)\n    })\n\n    // Fill organizations menu\n    var url_orgs = url + 'getOrganizations'\n    var orgs_arr = []\n    axios.get(url_orgs).then(res => {\n      var orgs = res.data.orgs\n      for (var i = 0; i < orgs.length; i++) {\n        orgs_arr.push(orgs[i])\n      }\n      orgs_arr.sort()\n      this.setState({organizations: orgs_arr})\n      console.log(this.state.organizations)\n    }).catch(err => {\n      console.log(err)\n    })\n\n  }\n\n  goBack = () => {\n    this.props.history.goBack()\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    })\n  }\n\n  handleDateChange = name => date => {\n    this.setState({\n      [name]: date.target.value\n    })\n  }\n\n  submitEvent = () => {\n    var url_event = url + 'createEvent'\n    console.log('Name: ' + this.state.name)\n    console.log('Org: ' + this.state.org)\n    console.log('Category: ' + this.state.category)\n    console.log('Start time: ' + this.state.startTime)\n    console.log('End time: ' + this.state.endTime)\n    console.log('Website: ' + this.state.website)\n    console.log('Description: ' + this.state.description)\n    console.log('Is free: ' + this.state.isFree)\n\n    var errors = []\n    if (this.state.name === '') {\n      errors.push('Enter a name for your event.')\n    }\n    if (this.state.organization === '') {\n      errors.push('Enter an organization for your event.')\n    }\n    if (this.state.location === '') {\n      errors.push('Enter a location for your event.')\n    }\n    if (this.state.startTime === null) {\n      errors.push('Enter a start time for your event.')\n    }\n    if (this.state.endTime === null) {\n      errors.push('Enter an end time for your event.')\n    }\n    this.setState({ displayError: errors })\n\n    if (errors.length === 0) {\n      console.log('Start time: ' + this.state.startTime.toLocaleString())\n      axios.post(url_event, {\n        params: {\n          name: this.state.name,\n          org: this.state.org,\n          cat: this.state.category,\n          start_datetime: this.state.startTime,\n          end_datetime: this.state.endTime,\n          location: this.state.location,\n          website: this.state.website,\n          description: this.state.description,\n          is_free: this.state.isFree\n        }\n      }).then((response) => {\n        if (response.data === 'Created event') {\n          this.goBack()\n        } else {\n          console.log('error')\n        }\n      }).catch((error) => {\n        console.log(error)\n      })\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className='page'>\n        <MuiThemeProvider theme={Theme}>\n          <Header />\n          <HomeButton />\n          <Grid container>\n            <Grid item xs={12} className=\"paper\">\n              <Paper>\n                <Typography variant=\"h3\" color=\"primary\">\n                  Create Event\n                </Typography>\n                <div className='fields'>\n                  <FormControl>\n                    <TextField\n                      id='event-name'\n                      label='Event Name'\n                      className={classes.textField}\n                      value={this.state.name}\n                      onChange={this.handleChange('name')}\n                      margin='normal'\n                      variant='outlined'\n                    />\n\n                    <TextField\n                      id='event-description'\n                      label='Description'\n                      className={classes.textField}\n                      value={this.state.description}\n                      onChange={this.handleChange('description')}\n                      margin='normal'\n                      variant='outlined'\n                    />\n\n                    <TextField\n                      id='event-location'\n                      label='Event Location'\n                      className={classes.textField}\n                      value={this.state.location}\n                      onChange={this.handleChange('location')}\n                      margin='normal'\n                      variant='outlined'\n                    />\n\n                    <TextField\n                      id='event-website'\n                      label='Event Website'\n                      className={classes.textField}\n                      value={this.state.website}\n                      onChange={this.handleChange('website')}\n                      margin='normal'\n                      variant='outlined'\n                    />\n\n                    <TextField\n                      id=\"datetime-local\"\n                      label=\"Start Date & Time\"\n                      type=\"datetime-local\"\n                      className={classes.textField}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      onChange={this.handleDateChange('startTime')}\n                    />\n\n                    <TextField\n                      id=\"datetime-local\"\n                      label=\"End Date & Time\"\n                      type=\"datetime-local\"\n                      className={classes.textField}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      onChange={this.handleDateChange('endTime')}\n                    />\n\n                    <InputLabel htmlFor=\"outlined-org-simple\">\n                      Organization\n                    </InputLabel>\n                    <Select\n                      value={this.state.org}\n                      onChange={this.handleChange('org')}\n                      className={classes.select}\n                    >\n                      {this.state.organizations.map(organization => (\n                        <MenuItem key={organization} value={organization}>\n                          {organization}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n\n\n                  <FormControl>\n                    <InputLabel htmlFor=\"select-multiple-checkbox\">Category</InputLabel>\n                    <Select\n                      multiple\n                      value={this.state.category}\n                      onChange={this.handleChange('category')}\n                      input={<Input id=\"select-multiple-checkbox\" />}\n                      renderValue={selected => selected.join(', ')}\n                      className={classes.select}\n                      MenuProps={MenuProps}\n                    >\n                      {this.state.categories.map(category => (\n                        <MenuItem key={category} value={category}>\n                          <Checkbox checked={this.state.category.indexOf(category) > -1} />\n                          <ListItemText primary={category} />\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n\n                  <FormControl>\n                    <InputLabel htmlFor=\"outlined-isfree-simple\">\n                      Free?\n                    </InputLabel>\n                    <Select\n                      value={this.state.isFree}\n                      onChange={this.handleChange('isFree')}\n                      className={classes.select}\n                    >\n                      <MenuItem value={true}>Yes</MenuItem>\n                      <MenuItem value={false}>No</MenuItem>\n                    </Select>\n                  </FormControl>\n                </div>\n                <div className='Button'>\n                  <Button variant=\"contained\" color=\"primary\" onClick={this.submitEvent} size=\"large\">\n                    Submit Event\n                  </Button>\n                </div>\n              </Paper>\n            </Grid>\n          </Grid>\n        </MuiThemeProvider>\n      </div>\n    )\n\n    /*return (\n      <div className=\"CreateEvent\">\n        <Header />\n        <MuiThemeProvider theme={Theme}>\n          <div className='EventPaper'>\n\n            <HomeButton />\n\n            <Paper className='EventPaperInner'>\n              <div className='header'>\n                <Typography variant=\"h3\" color=\"primary\">\n                  Create Event\n                </Typography>\n              </div>\n              <div className='InnerPageFields'>\n                <FormControl>\n                  <TextField\n                    id='event-name'\n                    label='Event Name'\n                    className={classes.textField}\n                    value={this.state.name}\n                    onChange={this.handleChange('name')}\n                    margin='normal'\n                    variant='outlined'\n                  />\n\n                  <TextField\n                    id='event-description'\n                    label='Description'\n                    className={classes.textField}\n                    value={this.state.description}\n                    onChange={this.handleChange('description')}\n                    margin='normal'\n                    variant='outlined'\n                  />\n\n                  <TextField\n                    id='event-location'\n                    label='Event Location'\n                    className={classes.textField}\n                    value={this.state.location}\n                    onChange={this.handleChange('location')}\n                    margin='normal'\n                    variant='outlined'\n                  />\n\n                  <TextField\n                    id='event-website'\n                    label='Event Website'\n                    className={classes.textField}\n                    value={this.state.website}\n                    onChange={this.handleChange('website')}\n                    margin='normal'\n                    variant='outlined'\n                  />\n\n                  <TextField\n                    id=\"datetime-local\"\n                    label=\"Start Date & Time\"\n                    type=\"datetime-local\"\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    onChange={this.handleDateChange('startTime')}\n                  />\n\n                  <TextField\n                    id=\"datetime-local\"\n                    label=\"End Date & Time\"\n                    type=\"datetime-local\"\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    onChange={this.handleDateChange('endTime')}\n                  />\n                </FormControl>\n              </div>\n\n              <div className='InnerPageFields'>\n                <FormControl>\n                  <InputLabel htmlFor=\"outlined-org-simple\">\n                    Organization\n                  </InputLabel>\n                  <Select\n                    value={this.state.org}\n                    onChange={this.handleChange('org')}\n                    className={classes.select}\n                  >\n                    {this.state.organizations.map(organization => (\n                      <MenuItem key={organization} value={organization}>\n                        {organization}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n\n                <FormControl>\n                  <InputLabel htmlFor=\"select-multiple-checkbox\">Category</InputLabel>\n                  <Select\n                    multiple\n                    value={this.state.category}\n                    onChange={this.handleChange('category')}\n                    input={<Input id=\"select-multiple-checkbox\" />}\n                    renderValue={selected => selected.join(', ')}\n                    className={classes.select}\n                    MenuProps={MenuProps}\n                  >\n                    {this.state.categories.map(category => (\n                      <MenuItem key={category} value={category}>\n                        <Checkbox checked={this.state.category.indexOf(category) > -1} />\n                        <ListItemText primary={category} />\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n\n                <FormControl>\n                  <InputLabel htmlFor=\"outlined-isfree-simple\">\n                    Free?\n                  </InputLabel>\n                  <Select\n                    value={this.state.isFree}\n                    onChange={this.handleChange('isFree')}\n                    className={classes.select}\n                  >\n                    <MenuItem value={true}>Yes</MenuItem>\n                    <MenuItem value={false}>No</MenuItem>\n                  </Select>\n                </FormControl>\n              </div>\n              <div className='Button'>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.submitEvent} size=\"large\">\n                  Submit Event\n                </Button>\n              </div>\n            </Paper>\n          </div>\n        </MuiThemeProvider>\n      </div>\n    )*/\n  }\n}\n\n\nexport default withStyles(styles)(withRouter(CreateEvent))\n"]},"metadata":{},"sourceType":"module"}