{"ast":null,"code":"import _defineProperty from \"/Users/arielchen232/cos333/whatsroaring/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/arielchen232/cos333/whatsroaring/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/arielchen232/cos333/whatsroaring/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/arielchen232/cos333/whatsroaring/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/arielchen232/cos333/whatsroaring/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/arielchen232/cos333/whatsroaring/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/arielchen232/cos333/whatsroaring/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/arielchen232/cos333/whatsroaring/src/Pages/Calendar.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport moment from 'moment';\nimport BigCalendar from 'react-big-calendar'; // Styling\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport './Calendar.css';\nimport DropdownMultiple from './Components/DropdownMultiple';\nimport FilterForm from './Components/FilterForm';\nimport LogInButton from './Components/LogInButton';\nimport AddEventButton from './Components/AddEventButton';\nimport CheckboxLabels from './Components/Checkbox';\nvar localizer = BigCalendar.momentLocalizer(moment); // const url = 'https://whatsroaring-api.herokuapp.com/'\n\nvar url = 'http://127.0.0.1:8000/';\nvar orange = '#fb8c00';\n\nfunction getOrgName(orgPk) {\n  var url_orgName = url + 'getOrgName/' + orgPk;\n  var orgname;\n  axios.get(url_orgName).then(function (res) {\n    var posts = JSON.parse(res.data.data);\n\n    if (posts.length >= 1) {\n      orgname = posts[0].fields.name; // console.log('Org name: ' + orgname)\n    }\n  }); // this isn't updated because asynchronous?\n  // console.log('org name' + orgname)\n\n  return orgname;\n} // return array of location objects to populate dropdown\n\n\nfunction getLocationObjects() {\n  var url_locs = url + 'getLocations';\n  var locs_arr = [];\n  axios.get(url_locs).then(function (res) {\n    var locs = res.data.locs;\n\n    for (var i = 0; i < locs.length; i++) {\n      locs_arr.push({\n        id: i,\n        title: locs[i],\n        selected: false,\n        key: 'locations'\n      });\n    }\n  });\n  return locs_arr;\n} // return array of category objects to populate dropdown\n\n\nfunction getCategoryObjects() {\n  var url_cats = url + 'getCategories';\n  var cats_arr = [];\n  axios.get(url_cats).then(function (res) {\n    var cats = res.data.cats;\n\n    for (var i = 0; i < cats.length; i++) {\n      cats_arr.push({\n        id: i,\n        title: cats[i],\n        selected: false,\n        key: 'categories'\n      });\n    }\n  });\n  return cats_arr;\n} // return array of organization objects to populate dropdown\n\n\nfunction getOrganizationObjects() {\n  var url_orgs = url + 'getOrganizations';\n  var orgs_arr = [];\n  axios.get(url_orgs).then(function (res) {\n    var orgs = res.data.orgs;\n\n    for (var i = 0; i < orgs.length; i++) {\n      orgs_arr.push({\n        id: i,\n        title: orgs[i],\n        selected: false,\n        key: 'organizations'\n      });\n    }\n  });\n  return orgs_arr;\n}\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleCheckChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.checked));\n      };\n    };\n\n    _this.toggleSelected = function (id, key) {\n      var temp = JSON.parse(JSON.stringify(_this.state[key]));\n      temp[id].selected = !temp[id].selected;\n\n      _this.setState(_defineProperty({}, key, temp));\n\n      var i;\n      var locations = \"\";\n      var categories = \"\";\n      var organizations = \"\";\n\n      for (i = 0; i < _this.state.locations.length; i++) {\n        if (_this.state.locations[i].selected == true) {\n          locations += _this.state.locations[i].title + ',';\n        }\n      }\n\n      for (i = 0; i < _this.state.categories.length; i++) {\n        if (_this.state.categories[i].selected == true) {\n          categories += _this.state.categories[i].title + ',';\n        }\n      }\n\n      for (i = 0; i < _this.state.organizations.length; i++) {\n        if (_this.state.organizations[i].selected == true) {\n          categories += _this.state.organizations[i].title + ',';\n        }\n      } // remove trailing commas from strings\n\n\n      locations = locations.substr(0, locations.length - 1);\n      categories = categories.substr(0, categories.length - 1);\n      organizations = organizations.substr(0, organizations.length - 1);\n      console.log(locations);\n      console.log(categories);\n      console.log(organizations);\n      var url_getEvents = url + 'getEvents';\n      console.log(url_getEvents); // Repopulate calendar when things are toggled\n\n      axios.get(url_getEvents, {\n        params: {\n          locations: locations,\n          categories: categories,\n          organizations: organizations\n        }\n      }).then(function (res) {\n        console.log(\"reached this point\");\n        var posts = JSON.parse(res.data.Events_JSON);\n        var events = [];\n        posts.forEach(function (post) {\n          events.push({\n            title: post.fields.name,\n            start: new Date(post.fields.start_datetime),\n            end: new Date(post.fields.end_datetime),\n            desc: post.fields.description,\n            loc: post.fields.location,\n            website: post.fields.website,\n            org: getOrgName(post.fields.org),\n            is_free: post.fields.is_free\n          });\n        });\n\n        _this.setState({\n          events: events\n        });\n\n        _this._isMounted = true;\n      }).catch(function (error) {\n        console.log(error);\n        console.log(error.response.data);\n      });\n    };\n\n    _this.seeDetails = function (event) {\n      console.log('Org: ' + event.org);\n\n      _this.props.changeToDetails(event);\n\n      _this.props.history.push('/details');\n    };\n\n    _this.state = {\n      events: [],\n      netid: '',\n      locations: [],\n      categories: [],\n      organizations: [],\n      freeOnly: false,\n      favorites: false,\n      checkedFree: false,\n      checkedFav: false\n    };\n    _this._isMounted = false;\n    _this.eventStyleGetter = _this.eventStyleGetter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        locations: getLocationObjects()\n      });\n      this.setState({\n        categories: getCategoryObjects()\n      });\n      this.setState({\n        organizations: getOrganizationObjects()\n      });\n      var url_getEvents = url + 'getEvents';\n      axios.get(url_getEvents).then(function (res) {\n        var posts = JSON.parse(res.data.Events_JSON);\n        var events = [];\n        posts.forEach(function (post) {\n          events.push({\n            title: post.fields.name,\n            start: new Date(post.fields.start_datetime),\n            end: new Date(post.fields.end_datetime),\n            desc: post.fields.description,\n            loc: post.fields.location,\n            website: post.fields.website,\n            org: getOrgName(post.fields.org),\n            is_free: post.fields.is_free\n          });\n        });\n\n        _this2.setState({\n          events: events\n        });\n\n        _this2._isMounted = true;\n      }).catch(function (error) {\n        console.log(error);\n        console.log(error.response.data);\n      });\n    }\n  }, {\n    key: \"eventStyleGetter\",\n    value: function eventStyleGetter(event) {\n      var color = orange;\n      /* Can add logic here to color code */\n\n      var style = {\n        backgroundColor: color,\n        opacity: 0.8,\n        color: 'black',\n        border: '0px'\n      };\n      return {\n        style: style\n      };\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var _this3 = this;\n\n      var query = new URLSearchParams(this.props.location.search);\n      var ticket = query.get('ticket');\n\n      if (ticket) {\n        var url_netid = url + \"netid?ticket=\" + ticket;\n        axios.get(url_netid).then(function (res) {\n          _this3.setState({\n            netid: res['data']\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var addEvent;\n      var adminList = ['rachelsc', '-'];\n      this.validate();\n      var isAdmin = adminList.includes(this.state.netid);\n\n      if (isAdmin) {\n        addEvent = React.createElement(AddEventButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        });\n      } else {\n        addEvent = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"right-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(LogInButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), addEvent), React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(DropdownMultiple, {\n        titleHelper: \"location\",\n        title: \"Select location\",\n        list: this.state.locations,\n        toggleItem: this.toggleSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }), React.createElement(DropdownMultiple, {\n        titleHelper: \"event type\",\n        title: \"Select event type\",\n        list: this.state.categories,\n        toggleItem: this.toggleSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), React.createElement(DropdownMultiple, {\n        titleHelper: \"organization\",\n        title: \"Select organization\",\n        list: this.state.organizations,\n        toggleItem: this.toggleSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), React.createElement(CheckboxLabels, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(BigCalendar, {\n        localizer: localizer,\n        events: this.state.events,\n        defaultView: BigCalendar.Views.MONTH,\n        onSelectEvent: this.seeDetails,\n        views: ['month', 'week', 'day'],\n        eventPropGetter: this.eventStyleGetter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    /*title: state.eventReducer.title,\n    start: state.eventReducer.start,\n    end: state.eventReducer.end,\n    desc: state.eventReducer.desc,\n    location: state.eventReducer.location,\n    website: state.eventReducer.website,\n    org: state.eventReducer.org,\n    is_free: state.eventReducer.is_free*/\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeToDetails: function changeToDetails(event) {\n      return dispatch({\n        type: 'changeToDetails',\n        payload: {\n          title: event.title,\n          start: event.start,\n          end: event.end,\n          desc: event.desc,\n          loc: event.loc,\n          website: event.website,\n          org: event.org,\n          is_free: event.is_free\n        }\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Calendar));","map":{"version":3,"sources":["/Users/arielchen232/cos333/whatsroaring/src/Pages/Calendar.js"],"names":["React","Component","withRouter","connect","axios","moment","BigCalendar","DropdownMultiple","FilterForm","LogInButton","AddEventButton","CheckboxLabels","localizer","momentLocalizer","url","orange","getOrgName","orgPk","url_orgName","orgname","get","then","res","posts","JSON","parse","data","length","fields","name","getLocationObjects","url_locs","locs_arr","locs","i","push","id","title","selected","key","getCategoryObjects","url_cats","cats_arr","cats","getOrganizationObjects","url_orgs","orgs_arr","orgs","Calendar","args","handleCheckChange","event","setState","target","checked","toggleSelected","temp","stringify","state","locations","categories","organizations","substr","console","log","url_getEvents","params","Events_JSON","events","forEach","post","start","Date","start_datetime","end","end_datetime","desc","description","loc","location","website","org","is_free","_isMounted","catch","error","response","seeDetails","props","changeToDetails","history","netid","freeOnly","favorites","checkedFree","checkedFav","eventStyleGetter","bind","color","style","backgroundColor","opacity","border","query","URLSearchParams","search","ticket","url_netid","addEvent","adminList","validate","isAdmin","includes","Views","MONTH","mapStateToProps","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport moment from 'moment'\nimport BigCalendar from 'react-big-calendar'\n\n// Styling\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport './Calendar.css'\nimport DropdownMultiple from './Components/DropdownMultiple'\nimport FilterForm from './Components/FilterForm'\nimport LogInButton from './Components/LogInButton'\nimport AddEventButton from './Components/AddEventButton'\nimport CheckboxLabels from './Components/Checkbox'\n\nconst localizer = BigCalendar.momentLocalizer(moment)\n// const url = 'https://whatsroaring-api.herokuapp.com/'\nconst url = 'http://127.0.0.1:8000/'\nconst orange = '#fb8c00'\n\nfunction getOrgName(orgPk) {\n  const url_orgName = url + 'getOrgName/' + orgPk;\n  var orgname;\n  axios.get(url_orgName).then(res => {\n    const posts = JSON.parse(res.data.data)\n    if (posts.length >= 1) {\n      orgname = posts[0].fields.name;\n      // console.log('Org name: ' + orgname)\n    }\n  })\n  // this isn't updated because asynchronous?\n  // console.log('org name' + orgname)\n  return orgname\n}\n\n// return array of location objects to populate dropdown\nfunction getLocationObjects() {\n  const url_locs = url + 'getLocations'\n  var locs_arr = [];\n  axios.get(url_locs).then(res => {\n    var locs = res.data.locs\n    for (var i = 0; i < locs.length; i++) {\n      locs_arr.push({\n        id: i,\n        title: locs[i],\n        selected: false,\n        key: 'locations'\n      });\n    }\n  })\n  return locs_arr\n}\n\n// return array of category objects to populate dropdown\nfunction getCategoryObjects() {\n  const url_cats = url + 'getCategories'\n  var cats_arr = [];\n  axios.get(url_cats).then(res => {\n    var cats = res.data.cats\n    for (var i = 0; i < cats.length; i++) {\n      cats_arr.push({\n        id: i,\n        title: cats[i],\n        selected: false,\n        key: 'categories'\n      });\n    }\n  })\n  return cats_arr\n}\n\n// return array of organization objects to populate dropdown\nfunction getOrganizationObjects() {\n  const url_orgs = url + 'getOrganizations'\n  var orgs_arr = [];\n  axios.get(url_orgs).then(res => {\n    var orgs = res.data.orgs\n    for (var i = 0; i < orgs.length; i++) {\n      orgs_arr.push({\n        id: i,\n        title: orgs[i],\n        selected: false,\n        key: 'organizations'\n      });\n    }\n  })\n  return orgs_arr\n}\n\nclass Calendar extends Component {\n  constructor(...args) {\n    super(...args)\n    this.state = {\n      events: [],\n      netid: '',\n      locations: [],\n      categories: [],\n      organizations: [],\n      freeOnly: false,\n      favorites: false,\n      checkedFree: false,\n      checkedFav: false\n    }\n    this._isMounted = false\n    this.eventStyleGetter = this.eventStyleGetter.bind(this)\n  }\n\n  handleCheckChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  toggleSelected = (id, key) => {\n    let temp = JSON.parse(JSON.stringify(this.state[key]))\n    temp[id].selected = !temp[id].selected\n    this.setState({\n      [key]: temp\n    })\n    var i;\n    var locations = \"\";\n    var categories = \"\";\n    var organizations = \"\";\n    for (i = 0; i < this.state.locations.length; i++) {\n      if (this.state.locations[i].selected == true) {\n        locations += (this.state.locations[i].title + ',');\n      }\n    }\n    for (i = 0; i < this.state.categories.length; i++) {\n      if (this.state.categories[i].selected == true) {\n        categories += (this.state.categories[i].title + ',');\n      }\n    }\n    for (i = 0; i < this.state.organizations.length; i++) {\n      if (this.state.organizations[i].selected == true) {\n        categories += (this.state.organizations[i].title + ',');\n      }\n    }\n    // remove trailing commas from strings\n    locations = locations.substr(0, locations.length-1);\n    categories = categories.substr(0, categories.length-1);\n    organizations = organizations.substr(0, organizations.length-1);\n    console.log(locations)\n    console.log(categories)\n    console.log(organizations)\n    const url_getEvents = url + 'getEvents'\n    console.log(url_getEvents)\n    // Repopulate calendar when things are toggled\n    axios.get(url_getEvents, {\n      params: {\n        locations: locations,\n        categories: categories,\n        organizations: organizations,\n    }})\n    .then(res => {\n      console.log(\"reached this point\")\n      const posts = JSON.parse(res.data.Events_JSON)\n      const events = [];\n      posts.forEach((post) => {\n  events.push({\n          title: post.fields.name,\n          start: new Date(post.fields.start_datetime),\n          end: new Date(post.fields.end_datetime),\n          desc: post.fields.description,\n          loc: post.fields.location,\n          website: post.fields.website,\n          org: getOrgName(post.fields.org),\n          is_free: post.fields.is_free\n        })\n      })\n      this.setState({events})\n      this._isMounted = true\n    })\n    .catch(function(error) {\n      console.log(error);\n      console.log(error.response.data);\n    })\n  }\n\n  componentDidMount() {\n    this.setState({locations:getLocationObjects()})\n    this.setState({categories:getCategoryObjects()})\n    this.setState({organizations:getOrganizationObjects()})\n    const url_getEvents = url + 'getEvents'\n    axios.get(url_getEvents)\n    .then(res => {\n      const posts = JSON.parse(res.data.Events_JSON)\n      const events = [];\n      posts.forEach(function(post){\n        events.push({\n          title: post.fields.name,\n          start: new Date(post.fields.start_datetime),\n          end: new Date(post.fields.end_datetime),\n          desc: post.fields.description,\n          loc: post.fields.location,\n          website: post.fields.website,\n          org: getOrgName(post.fields.org),\n          is_free: post.fields.is_free\n        })\n      })\n      this.setState({events})\n      this._isMounted = true\n    })\n    .catch(function(error) {\n      console.log(error);\n      console.log(error.response.data);\n    })\n  }\n\n  seeDetails = (event) => {\n    console.log('Org: ' + event.org)\n    this.props.changeToDetails(event);\n    this.props.history.push('/details')\n  }\n\n  eventStyleGetter(event) {\n    var color = orange\n    /* Can add logic here to color code */\n    var style = {\n      backgroundColor: color,\n      opacity: 0.8,\n      color: 'black',\n      border: '0px'\n    }\n    return {\n      style: style\n    }\n  }\n\n  validate() {\n    const query = new URLSearchParams(this.props.location.search)\n    var ticket = query.get('ticket')\n    if (ticket) {\n      const url_netid = url + \"netid?ticket=\" + ticket\n      axios.get(url_netid)\n      .then(res => {\n        this.setState({netid: res['data']})\n      })\n      .catch(function(error) {\n        console.log(error);\n      })\n    }\n  }\n\n  render() {\n    var addEvent\n    const adminList = ['rachelsc', '-']\n    this.validate()\n    const isAdmin = adminList.includes(this.state.netid)\n    if (isAdmin) {\n      addEvent = <AddEventButton/>\n    }\n    else {\n      addEvent = <div></div>\n    }\n    return (\n      <div>\n        <div className=\"right-wrapper\">\n          <LogInButton/>\n          {addEvent}\n        </div>\n        <div className=\"wrapper\">\n          <DropdownMultiple\n            titleHelper=\"location\"\n            title=\"Select location\"\n            list={this.state.locations}\n            toggleItem={this.toggleSelected}\n          />\n          <DropdownMultiple\n            titleHelper=\"event type\"\n            title=\"Select event type\"\n            list={this.state.categories}\n            toggleItem={this.toggleSelected}\n          />\n          <DropdownMultiple\n            titleHelper=\"organization\"\n            title=\"Select organization\"\n            list={this.state.organizations}\n            toggleItem={this.toggleSelected}\n          />\n          <CheckboxLabels\n            />\n        </div>\n        <div className='Calendar'>\n          <BigCalendar\n            localizer={localizer}\n            events={this.state.events}\n            defaultView={BigCalendar.Views.MONTH}\n            onSelectEvent={this.seeDetails}\n            views={['month', 'week', 'day']}\n            eventPropGetter={(this.eventStyleGetter)}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    /*title: state.eventReducer.title,\n    start: state.eventReducer.start,\n    end: state.eventReducer.end,\n    desc: state.eventReducer.desc,\n    location: state.eventReducer.location,\n    website: state.eventReducer.website,\n    org: state.eventReducer.org,\n    is_free: state.eventReducer.is_free*/\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeToDetails: (event) => dispatch({\n      type: 'changeToDetails',\n      payload: {\n        title: event.title,\n        start: event.start,\n        end: event.end,\n        desc: event.desc,\n        loc: event.loc,\n        website: event.website,\n        org: event.org,\n        is_free: event.is_free\n      }\n    })\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Calendar))\n"]},"metadata":{},"sourceType":"module"}