{"ast":null,"code":"import _classCallCheck from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/leitan/Developer/whatsroaring/src/Pages/Calendar.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport moment from 'moment';\nimport BigCalendar from 'react-big-calendar'; // Styling\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport './Calendar.css';\nvar localizer = BigCalendar.momentLocalizer(moment); //const url = 'https://whatsroaring-api.herokuapp.com/'\n\nvar url = 'http://127.0.0.1:8001/';\nvar orange = '#fb8c00';\n\nfunction getOrgName(orgPk) {\n  var url_orgName = url + 'getOrgName/' + orgPk;\n  axios.get(url_orgName).then(function (res) {\n    var posts = JSON.parse(res.data.data);\n\n    if (posts.length >= 1) {\n      var post = posts[0];\n      console.log('org: ' + post.fields.name);\n      return post.fields.name;\n    }\n  });\n}\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.seeDetails = function (event) {\n      console.log('Org: ' + event.org);\n\n      _this.props.changeToDetails(event);\n\n      _this.props.history.push('/details');\n    };\n\n    _this.state = {\n      events: []\n    };\n    _this._isMounted = false;\n    _this.eventStyleGetter = _this.eventStyleGetter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url_getEvents = url + 'getEvents';\n      axios.get(url_getEvents).then(function (res) {\n        var posts = JSON.parse(res.data.Events_JSON);\n        var events = [];\n        posts.forEach(function (post) {\n          var orgName = getOrgName(post.fields.org);\n          events.push({\n            title: post.fields.name,\n            start: new Date(post.fields.start_datetime),\n            end: new Date(post.fields.end_datetime),\n            desc: post.fields.description,\n            loc: post.fields.location,\n            website: post.fields.website,\n            org: orgName,\n            is_free: post.fields.is_free\n          });\n        });\n\n        _this2.setState({\n          events: events\n        });\n\n        _this2._isMounted = true;\n      });\n    }\n  }, {\n    key: \"eventStyleGetter\",\n    value: function eventStyleGetter(event) {\n      var color = orange;\n      /* Can add logic here to color code */\n\n      var style = {\n        backgroundColor: color,\n        opacity: 0.8,\n        color: 'black',\n        border: '0px'\n      };\n      return {\n        style: style\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(BigCalendar, {\n        localizer: localizer,\n        events: this.state.events,\n        defaultView: BigCalendar.Views.MONTH,\n        onSelectEvent: this.seeDetails,\n        views: ['month', 'week', 'day'],\n        eventPropGetter: this.eventStyleGetter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    /*title: state.eventReducer.title,\n    start: state.eventReducer.start,\n    end: state.eventReducer.end,\n    desc: state.eventReducer.desc,\n    location: state.eventReducer.location,\n    website: state.eventReducer.website,\n    org: state.eventReducer.org,\n    is_free: state.eventReducer.is_free*/\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeToDetails: function changeToDetails(event) {\n      return dispatch({\n        type: 'changeToDetails',\n        payload: {\n          title: event.title,\n          start: event.start,\n          end: event.end,\n          desc: event.desc,\n          loc: event.loc,\n          website: event.website,\n          org: event.org,\n          is_free: event.is_free\n        }\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Calendar));","map":{"version":3,"sources":["/Users/leitan/Developer/whatsroaring/src/Pages/Calendar.js"],"names":["React","Component","withRouter","connect","axios","moment","BigCalendar","localizer","momentLocalizer","url","orange","getOrgName","orgPk","url_orgName","get","then","res","posts","JSON","parse","data","length","post","console","log","fields","name","Calendar","args","seeDetails","event","org","props","changeToDetails","history","push","state","events","_isMounted","eventStyleGetter","bind","url_getEvents","Events_JSON","forEach","orgName","title","start","Date","start_datetime","end","end_datetime","desc","description","loc","location","website","is_free","setState","color","style","backgroundColor","opacity","border","Views","MONTH","mapStateToProps","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport moment from 'moment'\nimport BigCalendar from 'react-big-calendar'\n\n// Styling\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport './Calendar.css'\n\n\nconst localizer = BigCalendar.momentLocalizer(moment)\n//const url = 'https://whatsroaring-api.herokuapp.com/'\nconst url = 'http://127.0.0.1:8001/'\nconst orange = '#fb8c00'\n\nfunction getOrgName(orgPk) {\n  const url_orgName = url + 'getOrgName/' + orgPk\n  axios.get(url_orgName).then(res => {\n    const posts = JSON.parse(res.data.data)\n    if (posts.length >= 1) {\n      const post = posts[0]\n      console.log('org: ' + post.fields.name)\n      return post.fields.name\n    }\n  })\n}\n\n\nclass Calendar extends Component {\n  constructor(...args) {\n    super(...args)\n    this.state = { events: [] }\n    this._isMounted = false\n    this.eventStyleGetter = this.eventStyleGetter.bind(this)\n  }\n\n  componentDidMount() {\n    const url_getEvents = url + 'getEvents'\n    axios.get(url_getEvents).then(res => {\n      const posts = JSON.parse(res.data.Events_JSON)\n      const events = [];\n      posts.forEach(function(post){\n        const orgName = getOrgName(post.fields.org)\n        events.push({\n          title: post.fields.name, \n          start: new Date(post.fields.start_datetime), \n          end: new Date(post.fields.end_datetime),\n          desc: post.fields.description,\n          loc: post.fields.location,\n          website: post.fields.website,\n          org: orgName,\n          is_free: post.fields.is_free\n        });\n      });\n      this.setState({events})\n      this._isMounted = true\n    })\n  }\n\n  seeDetails = (event) => {\n    console.log('Org: ' + event.org)\n    this.props.changeToDetails(event);\n    this.props.history.push('/details')\n  }\n\n  eventStyleGetter(event) {\n    var color = orange\n    /* Can add logic here to color code */\n    var style = {\n      backgroundColor: color,\n      opacity: 0.8,\n      color: 'black',\n      border: '0px'\n    }\n    return {\n      style: style\n    }\n  }\n\n  render() {\n    return (\n      <div className='Calendar'>\n        <BigCalendar\n          localizer={localizer}\n          events={this.state.events}\n          defaultView={BigCalendar.Views.MONTH}\n          onSelectEvent={this.seeDetails}\n          views={['month', 'week', 'day']}\n          eventPropGetter={(this.eventStyleGetter)}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    /*title: state.eventReducer.title,\n    start: state.eventReducer.start,\n    end: state.eventReducer.end,\n    desc: state.eventReducer.desc,\n    location: state.eventReducer.location,\n    website: state.eventReducer.website,\n    org: state.eventReducer.org,\n    is_free: state.eventReducer.is_free*/\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeToDetails: (event) => dispatch({\n      type: 'changeToDetails', \n      payload: {\n        title: event.title, \n        start: event.start,\n        end: event.end,\n        desc: event.desc,\n        loc: event.loc,\n        website: event.website,\n        org: event.org,\n        is_free: event.is_free\n      }\n    })\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Calendar))\n"]},"metadata":{},"sourceType":"module"}