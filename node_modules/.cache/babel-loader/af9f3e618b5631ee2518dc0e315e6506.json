{"ast":null,"code":"import _classCallCheck from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/leitan/Developer/whatsroaring/src/Pages/Components/DropdownMultiple.js\";\nimport React, { Component } from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport onClickOutside from \"react-onclickoutside\";\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Theme from '../Assets/Theme';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport './DropdownMultiple.css';\n\nvar DropdownMultiple =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DropdownMultiple, _Component);\n\n  function DropdownMultiple(props) {\n    var _this;\n\n    _classCallCheck(this, DropdownMultiple);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropdownMultiple).call(this, props));\n    _this.state = {\n      listOpen: false,\n      headerTitle: _this.props.title\n    };\n    return _this;\n  }\n\n  _createClass(DropdownMultiple, [{\n    key: \"handleClickOutside\",\n    value: function handleClickOutside() {\n      this.setState({\n        listOpen: false\n      });\n    }\n  }, {\n    key: \"toggleList\",\n    value: function toggleList() {\n      this.setState(function (prevState) {\n        return {\n          listOpen: !prevState.listOpen\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          list = _this$props.list,\n          toggleItem = _this$props.toggleItem;\n      var _this$state = this.state,\n          listOpen = _this$state.listOpen,\n          headerTitle = _this$state.headerTitle;\n      return React.createElement(MuiThemeProvider, {\n        theme: Theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple-checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Locations\"), React.createElement(Select, {\n        multiple: true,\n        value: this.state.locations,\n        onChange: this.handleChange('locations'),\n        input: React.createElement(Input, {\n          id: \"select-multiple-checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          return selected.length + ' locations';\n        } //className={classes.select}\n        ,\n        MenuProps: MenuProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.state.allLocations.map(function (item) {\n        return React.createElement(MenuItem, {\n          key: item.title,\n          value: item.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: _this2.state.locations.indexOf(item.title) > -1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          primary: item.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }));\n      })))\n      /*<div className=\"dd-wrapper\">\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\n            <div className=\"dd-header-title\">{headerTitle}</div>\n            {listOpen\n              ? <FontAwesome name=\"angle-up\" size=\"2x\"/>\n              : <FontAwesome name=\"angle-down\" size=\"2x\"/>\n            }\n        </div>\n       {listOpen && <ul className=\"dd-list\">\n         {list.map((item) => (\n           <li className=\"dd-list-item\" key={item.title} onClick={() => toggleItem(item.id, item.key)}>\n            {item.selected && \"*\"} {item.title}\n           </li>\n          ))}\n        </ul>}\n      </div>*/\n      ;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var count = nextProps.list.filter(function (a) {\n        return a.selected;\n      }).length;\n\n      if (count === 0) {\n        return {\n          headerTitle: nextProps.title\n        };\n      } else if (count === 1) {\n        return {\n          headerTitle: \"\".concat(count, \" \").concat(nextProps.titleHelper)\n        };\n      } else if (count > 1) {\n        return {\n          headerTitle: \"\".concat(count, \" \").concat(nextProps.titleHelper, \"s\")\n        };\n      }\n    }\n  }]);\n\n  return DropdownMultiple;\n}(Component);\n\nexport default onClickOutside(DropdownMultiple);","map":{"version":3,"sources":["/Users/leitan/Developer/whatsroaring/src/Pages/Components/DropdownMultiple.js"],"names":["React","Component","FontAwesome","onClickOutside","MuiThemeProvider","Theme","InputLabel","MenuItem","Select","Input","ListItemText","DropdownMultiple","props","state","listOpen","headerTitle","title","setState","prevState","list","toggleItem","locations","handleChange","selected","length","MenuProps","allLocations","map","item","indexOf","nextProps","count","filter","a","titleHelper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport FontAwesome from 'react-fontawesome'\nimport onClickOutside from \"react-onclickoutside\"\n\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport Theme from '../Assets/Theme'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport Input from '@material-ui/core/Input'\nimport ListItemText from '@material-ui/core/ListItemText'\n\n\nimport './DropdownMultiple.css'\n\nclass DropdownMultiple extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      listOpen: false,\n      headerTitle: this.props.title\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    const count = nextProps.list.filter(function(a) { return a.selected; }).length;\n    if(count === 0){\n      return {headerTitle: nextProps.title}\n    }\n    else if(count === 1){\n      return {headerTitle: `${count} ${nextProps.titleHelper}`}\n    }\n    else if(count > 1){\n      return {headerTitle: `${count} ${nextProps.titleHelper}s`}\n    }\n  }\n\n  handleClickOutside() {\n    this.setState({\n      listOpen: false\n    })\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen\n    }))\n  }\n\n  render() {\n    const{list, toggleItem} = this.props\n    const{listOpen, headerTitle} = this.state\n    return (\n      <MuiThemeProvider theme={Theme}>\n      <InputLabel htmlFor=\"select-multiple-checkbox\">Locations</InputLabel>\n      <Select\n        multiple\n        value={this.state.locations}\n        onChange={this.handleChange('locations')}\n        input={<Input id=\"select-multiple-checkbox\" />}\n        renderValue={selected => selected.length + ' locations'}\n        //className={classes.select}\n        MenuProps={MenuProps}\n      >\n        {this.state.allLocations.map(item => (\n          <MenuItem key={item.title} value={item.title}>\n            <Checkbox checked={this.state.locations.indexOf(item.title) > -1} />\n            <ListItemText primary={item.title} />\n          </MenuItem>\n        ))}\n      </Select>\n      </MuiThemeProvider>\n      /*<div className=\"dd-wrapper\">\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\n            <div className=\"dd-header-title\">{headerTitle}</div>\n            {listOpen\n              ? <FontAwesome name=\"angle-up\" size=\"2x\"/>\n              : <FontAwesome name=\"angle-down\" size=\"2x\"/>\n            }\n        </div>\n       {listOpen && <ul className=\"dd-list\">\n         {list.map((item) => (\n           <li className=\"dd-list-item\" key={item.title} onClick={() => toggleItem(item.id, item.key)}>\n            {item.selected && \"*\"} {item.title}\n           </li>\n          ))}\n        </ul>}\n      </div>*/\n    )\n  }\n\n}\n\nexport default onClickOutside(DropdownMultiple);\n"]},"metadata":{},"sourceType":"module"}