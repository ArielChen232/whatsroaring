{"ast":null,"code":"import _classCallCheck from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/src/Pages/Components/LogInButton.js\";\nimport React, { Component } from 'react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from '../../Assets/Theme';\nimport Button from '@material-ui/core/Button';\nimport './Button.css';\n\nvar LogInButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogInButton, _Component);\n\n  function LogInButton(props) {\n    var _this;\n\n    _classCallCheck(this, LogInButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LogInButton).call(this, props));\n    _this.state = {\n      netid: sessionStorage.getItem('netid')\n    };\n    _this.casURL = 'https://fed.princeton.edu/cas/';\n    _this.buttonClicked = false; // this.url = 'http://whatsroaring-api.herokuapp.com/'\n\n    _this.url = 'http://127.0.0.1:8000/';\n    _this.front_url = 'http://localhost:3000/'; // this.front_url = 'http://whatsroaring.herokuapp.com/'\n\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LogInButton, [{\n    key: \"validate\",\n    value: function validate(ticket) {\n      var val_url = this.casURL + 'validate?service=' + encodeURIComponent(this.serviceURL()) + '&ticket=' + encodeURIComponent(ticket);\n      console.log('validate url = ' + val_url);\n      var request = new XMLHttpRequest();\n      request.open('GET', val_url, true);\n      request.send(null);\n\n      request.onreadystatechange = function () {\n        console.log('url opened');\n\n        if (request.readyState === 4 && request.status === 200) {\n          var type = request.getResponseHeader('Content-Type');\n\n          if (type.indexOf(\"text\") !== 1) {\n            var lines = request.responseText;\n            console.log(lines);\n            return lines;\n          }\n        }\n      };\n\n      console.log(\"didn't read correctly\");\n      return null;\n    }\n  }, {\n    key: \"authenticate\",\n    value: function authenticate() {\n      // const query = new URLSearchParams(window.location.href)\n      // var ticket = query.get('ticket')\n      var return_url = this.front_url + 'calendar'; // const return_url = 'http://whatsroaring.herokuapp.com/?netid='\n      // var ticket = window.location.search.replace(\"?\", ''); // remove the ?\n\n      var urlParams = new URLSearchParams(window.location.search);\n      var ticket = urlParams.get('ticket');\n      console.log('ticket: ' + ticket);\n\n      if (ticket) {\n        console.log('ticket received');\n        var netid = this.validate(ticket);\n\n        if (netid) {\n          sessionStorage.setItem('netid', netid);\n          window.location.href = return_url;\n          return;\n        }\n      } // No valid ticket; redirect the browser to the login page to get one\n\n\n      console.log('no ticket found');\n      var login_url = this.casURL + 'login?service=' + encodeURIComponent(this.front_url);\n      console.log('Location: ' + login_url); // window.location.href = login_url\n    }\n  }, {\n    key: \"serviceURL\",\n    value: function serviceURL() {\n      var url = window.location.href; // Remove the \"ticket\" parameter from the URL.\n\n      url = url.replace(\"ticket=[^&]*&?\", \"\"); // Remove a trailing question mark and/or ampersand.\n\n      url = url.replace(\"\\\\?&?$|&$\", \"\");\n      return url;\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      // if (true) {\n      //     const url_login = this.url + \"login\"\n      //     window.location.href = url_login\n      // }\n      // this.buttonClicked = true\n      this.authenticate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"button\", {\n        class: \"LogInButton\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Log In\");\n    }\n  }]);\n\n  return LogInButton;\n}(Component); //   constructor() {\n//     super()\n//     this.netid = null\n//     this.casURL = 'https://fed.princeton.edu/cas/'\n//     this.buttonClicked = false\n//     // this.url = 'http://whatsroaring-api.herokuapp.com/'\n//     this.url = 'http://127.0.0.1:8000/'\n//     this.handleClick = this.handleClick.bind(this)\n//   }\n//\n//\n//   handleClick() {\n//     if (true) {\n//       const url_login = this.url + \"login\"\n//       window.location.href = url_login\n//     }\n//     this.buttonClicked = true\n//   }\n//\n//   render () {\n//     return (\n//       <MuiThemeProvider theme={theme}>\n//         <div className='Button'>\n//           <Button variant=\"contained\" color=\"primary\" onClick={this.handleClick}>\n//             Log In\n//           </Button>\n//         </div>\n//       </MuiThemeProvider>\n//     );\n//   }\n// }\n\n\nexport { LogInButton as default };","map":{"version":3,"sources":["/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/src/Pages/Components/LogInButton.js"],"names":["React","Component","MuiThemeProvider","theme","Button","LogInButton","props","state","netid","sessionStorage","getItem","casURL","buttonClicked","url","front_url","handleClick","bind","ticket","val_url","encodeURIComponent","serviceURL","console","log","request","XMLHttpRequest","open","send","onreadystatechange","readyState","status","type","getResponseHeader","indexOf","lines","responseText","return_url","urlParams","URLSearchParams","window","location","search","get","validate","setItem","href","login_url","replace","authenticate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport theme from '../../Assets/Theme'\nimport Button from '@material-ui/core/Button'\n\nimport './Button.css'\n\nexport default class LogInButton extends Component {\n\n  constructor(props) {\n      super(props)\n      this.state = {netid: sessionStorage.getItem('netid')}\n      this.casURL = 'https://fed.princeton.edu/cas/'\n      this.buttonClicked = false\n      // this.url = 'http://whatsroaring-api.herokuapp.com/'\n      this.url = 'http://127.0.0.1:8000/'\n      this.front_url = 'http://localhost:3000/'\n      // this.front_url = 'http://whatsroaring.herokuapp.com/'\n      this.handleClick = this.handleClick.bind(this)\n  }\n\n  validate(ticket) {\n    const val_url = (this.casURL + 'validate?service=' +\n        encodeURIComponent(this.serviceURL()) + '&ticket=' +\n        encodeURIComponent(ticket))\n    console.log('validate url = ' + val_url)\n    var request = new XMLHttpRequest();\n    request.open('GET', val_url, true);\n    request.send(null);\n    request.onreadystatechange = function () {\n      console.log('url opened')\n      if (request.readyState === 4 && request.status === 200) {\n        var type = request.getResponseHeader('Content-Type');\n        if (type.indexOf(\"text\") !== 1) {\n          var lines = request.responseText;\n          console.log(lines)\n          return lines\n        }\n      }\n    }\n    console.log(\"didn't read correctly\")\n    return null\n  }\n\n  authenticate() {\n    // const query = new URLSearchParams(window.location.href)\n    // var ticket = query.get('ticket')\n    const return_url = this.front_url + 'calendar'\n    // const return_url = 'http://whatsroaring.herokuapp.com/?netid='\n    // var ticket = window.location.search.replace(\"?\", ''); // remove the ?\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const ticket = urlParams.get('ticket');\n    console.log('ticket: ' + ticket)\n    if (ticket) {\n      console.log('ticket received')\n      var netid = this.validate(ticket)\n      if (netid) {\n          sessionStorage.setItem('netid', netid)\n          window.location.href = return_url\n          return\n        }\n    }\n    // No valid ticket; redirect the browser to the login page to get one\n    console.log('no ticket found')\n    var login_url = this.casURL + 'login?service=' + encodeURIComponent(this.front_url)\n    console.log('Location: ' + login_url)\n    // window.location.href = login_url\n  }\n\n  serviceURL() {\n    var url = window.location.href;\n    // Remove the \"ticket\" parameter from the URL.\n    url = url.replace(\"ticket=[^&]*&?\", \"\");\n    // Remove a trailing question mark and/or ampersand.\n    url = url.replace(\"\\\\?&?$|&$\", \"\");\n    return url;\n\n  }\n\n\n\n  handleClick() {\n      // if (true) {\n      //     const url_login = this.url + \"login\"\n      //     window.location.href = url_login\n      // }\n      // this.buttonClicked = true\n      this.authenticate()\n  }\n  render () {\n      return (\n          <button class='LogInButton' onClick={this.handleClick}>\n             Log In\n          </button>\n      );\n  }\n}\n//   constructor() {\n//     super()\n//     this.netid = null\n//     this.casURL = 'https://fed.princeton.edu/cas/'\n//     this.buttonClicked = false\n//     // this.url = 'http://whatsroaring-api.herokuapp.com/'\n//     this.url = 'http://127.0.0.1:8000/'\n//     this.handleClick = this.handleClick.bind(this)\n//   }\n//\n//\n//   handleClick() {\n//     if (true) {\n//       const url_login = this.url + \"login\"\n//       window.location.href = url_login\n//     }\n//     this.buttonClicked = true\n//   }\n//\n//   render () {\n//     return (\n//       <MuiThemeProvider theme={theme}>\n//         <div className='Button'>\n//           <Button variant=\"contained\" color=\"primary\" onClick={this.handleClick}>\n//             Log In\n//           </Button>\n//         </div>\n//       </MuiThemeProvider>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}