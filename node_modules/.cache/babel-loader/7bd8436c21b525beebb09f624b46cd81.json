{"ast":null,"code":"import _defineProperty from \"/Users/arielchen232/cos333/whatsroaring/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/arielchen232/cos333/whatsroaring/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/arielchen232/cos333/whatsroaring/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/arielchen232/cos333/whatsroaring/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/arielchen232/cos333/whatsroaring/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/arielchen232/cos333/whatsroaring/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/arielchen232/cos333/whatsroaring/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/arielchen232/cos333/whatsroaring/src/Pages/Calendar.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport moment from 'moment';\nimport BigCalendar from 'react-big-calendar'; // Styling\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport './Calendar.css';\nimport DropdownMultiple from './Components/DropdownMultiple';\nimport FilterForm from './Components/FilterForm';\nvar localizer = BigCalendar.momentLocalizer(moment); //const url = 'https://whatsroaring-api.herokuapp.com/'\n\nvar url = 'http://127.0.0.1:8000/';\nvar orange = '#fb8c00';\n\nfunction getOrgName(orgPk) {\n  var url_orgName = url + 'getOrgName/' + orgPk;\n  axios.get(url_orgName).then(function (res) {\n    var posts = JSON.parse(res.data.data);\n\n    if (posts.length >= 1) {\n      console.log('Org name: ' + posts[0].fields.name);\n      return posts[0].fields.name;\n    }\n  });\n}\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.toggleSelected = function (id, key) {\n      var temp = JSON.parse(JSON.stringify(_this.state[key]));\n      temp[id].selected = !temp[id].selected;\n\n      _this.setState(_defineProperty({}, key, temp)); // THIS IS WHAT I ADDED\n\n\n      var i;\n      var locations = \"\";\n      var eventtypes = \"\";\n      var freeornot = \"\";\n\n      for (i = 0; i < _this.state.location.length; i++) {\n        if (_this.state.location[i].selected == true) {\n          locations += _this.state.location[i].title + ',';\n        }\n      }\n\n      for (i = 0; i < _this.state.eventtype.length; i++) {\n        if (_this.state.eventtype[i].selected == true) {\n          eventtypes += _this.state.eventtype[i].title + ',';\n        }\n      }\n\n      for (i = 0; i < _this.state.freeOrNot.length; i++) {\n        if (_this.state.freeOrNot[i].selected == true) {\n          freeornot = _this.state.freeOrNot[i].selected;\n        }\n      }\n\n      console.log(locations);\n      console.log(eventtypes);\n      console.log(freeornot);\n      var url_getEvents = url + 'getEventsFilter';\n      console.log(url_getEvents); // Repopulate calendar when things are toggled\n\n      axios.get(url_getEvents, {\n        params: {\n          locations: locations,\n          eventtypes: eventtypes,\n          freeornot: freeornot\n        }\n      }).then(function (res) {\n        console.log(\"reached this point\");\n        var posts = JSON.parse(res.data.Events_JSON);\n        var events = [];\n        posts.forEach(function (post) {\n          events.push({\n            title: post.fields.name,\n            start: new Date(post.fields.start_datetime),\n            end: new Date(post.fields.end_datetime),\n            desc: post.fields.description,\n            loc: post.fields.location,\n            website: post.fields.website,\n            org: getOrgName(post.fields.org),\n            is_free: post.fields.is_free\n          });\n        });\n\n        _this.setState({\n          events: events\n        });\n\n        _this._isMounted = true;\n      }).catch(function (error) {\n        console.log(error);\n        console.log(error.response.data);\n      });\n    };\n\n    _this.seeDetails = function (event) {\n      console.log('Org: ' + event.org);\n\n      _this.props.changeToDetails(event);\n\n      _this.props.history.push('/details');\n    };\n\n    _this.state = {\n      events: [],\n      location: [{\n        id: 0,\n        title: 'Richardson',\n        selected: false,\n        key: 'location'\n      }, {\n        id: 1,\n        title: 'Baker Rink',\n        selected: false,\n        key: 'location'\n      }, {\n        id: 2,\n        title: 'McCarter Theater',\n        selected: false,\n        key: 'location'\n      }],\n      eventtype: [{\n        id: 0,\n        title: 'Music',\n        selected: false,\n        key: 'eventtype'\n      }, {\n        id: 1,\n        title: 'Arts',\n        selected: false,\n        key: 'eventtype'\n      }, {\n        id: 2,\n        title: 'Sports',\n        selected: false,\n        key: 'eventtype'\n      }, {\n        id: 3,\n        title: 'Theater',\n        selected: false,\n        key: 'eventtype'\n      }],\n      freeOrNot: [{\n        id: 0,\n        title: 'Free events only',\n        selected: false,\n        key: 'freeOrNot'\n      }]\n    };\n    _this._isMounted = false;\n    _this.eventStyleGetter = _this.eventStyleGetter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url_getEvents = url + 'getEvents';\n      axios.get(url_getEvents).then(function (res) {\n        var posts = JSON.parse(res.data.Events_JSON);\n        var events = [];\n        posts.forEach(function (post) {\n          events.push({\n            title: post.fields.name,\n            start: new Date(post.fields.start_datetime),\n            end: new Date(post.fields.end_datetime),\n            desc: post.fields.description,\n            loc: post.fields.location,\n            website: post.fields.website,\n            org: getOrgName(post.fields.org),\n            is_free: post.fields.is_free\n          });\n        });\n\n        _this2.setState({\n          events: events\n        });\n\n        _this2._isMounted = true;\n      }).catch(function (error) {\n        console.log(error);\n        console.log(error.response.data);\n      });\n    }\n  }, {\n    key: \"eventStyleGetter\",\n    value: function eventStyleGetter(event) {\n      var color = orange;\n      /* Can add logic here to color code */\n\n      var style = {\n        backgroundColor: color,\n        opacity: 0.8,\n        color: 'black',\n        border: '0px'\n      };\n      return {\n        style: style\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(DropdownMultiple, {\n        titleHelper: \"location\",\n        title: \"Select location\",\n        list: this.state.location,\n        toggleItem: this.toggleSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(DropdownMultiple, {\n        titleHelper: \"event type\",\n        title: \"Select event type\",\n        list: this.state.eventtype,\n        toggleItem: this.toggleSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), React.createElement(DropdownMultiple, {\n        titleHelper: \"free only\",\n        title: \"Free events only?\",\n        list: this.state.freeOrNot,\n        toggleItem: this.toggleSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(BigCalendar, {\n        localizer: localizer,\n        events: this.state.events,\n        defaultView: BigCalendar.Views.MONTH,\n        onSelectEvent: this.seeDetails,\n        views: ['month', 'week', 'day'],\n        eventPropGetter: this.eventStyleGetter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    /*title: state.eventReducer.title,\n    start: state.eventReducer.start,\n    end: state.eventReducer.end,\n    desc: state.eventReducer.desc,\n    location: state.eventReducer.location,\n    website: state.eventReducer.website,\n    org: state.eventReducer.org,\n    is_free: state.eventReducer.is_free*/\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeToDetails: function changeToDetails(event) {\n      return dispatch({\n        type: 'changeToDetails',\n        payload: {\n          title: event.title,\n          start: event.start,\n          end: event.end,\n          desc: event.desc,\n          loc: event.loc,\n          website: event.website,\n          org: event.org,\n          is_free: event.is_free\n        }\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Calendar));","map":{"version":3,"sources":["/Users/arielchen232/cos333/whatsroaring/src/Pages/Calendar.js"],"names":["React","Component","withRouter","connect","axios","moment","BigCalendar","DropdownMultiple","FilterForm","localizer","momentLocalizer","url","orange","getOrgName","orgPk","url_orgName","get","then","res","posts","JSON","parse","data","length","console","log","fields","name","Calendar","args","toggleSelected","id","key","temp","stringify","state","selected","setState","i","locations","eventtypes","freeornot","location","title","eventtype","freeOrNot","url_getEvents","params","Events_JSON","events","forEach","post","push","start","Date","start_datetime","end","end_datetime","desc","description","loc","website","org","is_free","_isMounted","catch","error","response","seeDetails","event","props","changeToDetails","history","eventStyleGetter","bind","color","style","backgroundColor","opacity","border","Views","MONTH","mapStateToProps","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport moment from 'moment'\nimport BigCalendar from 'react-big-calendar'\n\n// Styling\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport './Calendar.css'\nimport DropdownMultiple from './Components/DropdownMultiple'\nimport FilterForm from './Components/FilterForm'\n\nconst localizer = BigCalendar.momentLocalizer(moment)\n//const url = 'https://whatsroaring-api.herokuapp.com/'\nconst url = 'http://127.0.0.1:8000/'\nconst orange = '#fb8c00'\n\nfunction getOrgName(orgPk) {\n  const url_orgName = url + 'getOrgName/' + orgPk\n  axios.get(url_orgName).then(res => {\n    const posts = JSON.parse(res.data.data)\n    if (posts.length >= 1) {\n      console.log('Org name: ' + posts[0].fields.name)\n      return posts[0].fields.name\n    }\n  })\n}\n\nclass Calendar extends Component {\n  constructor(...args) {\n    super(...args)\n    this.state = {\n      events: [],\n      location: [\n        {\n          id: 0,\n          title: 'Richardson',\n          selected: false,\n          key: 'location'\n        },\n        {\n          id: 1,\n          title: 'Baker Rink',\n          selected: false,\n          key: 'location'\n        },\n        {\n          id: 2,\n          title: 'McCarter Theater',\n          selected: false,\n          key: 'location'\n        }\n      ],\n      eventtype: [\n        {\n          id: 0,\n          title: 'Music',\n          selected: false,\n          key: 'eventtype'\n        },\n        {\n          id: 1,\n          title: 'Arts',\n          selected: false,\n          key: 'eventtype'\n        },\n        {\n          id: 2,\n          title: 'Sports',\n          selected: false,\n          key: 'eventtype'\n        },\n        {\n          id: 3,\n          title: 'Theater',\n          selected: false,\n          key: 'eventtype'\n        }\n      ],\n      freeOrNot: [\n        {\n          id: 0,\n          title: 'Free events only',\n          selected: false,\n          key: 'freeOrNot'\n        }\n      ]\n     }\n    this._isMounted = false\n    this.eventStyleGetter = this.eventStyleGetter.bind(this)\n  }\n\n  toggleSelected = (id, key) => {\n    let temp = JSON.parse(JSON.stringify(this.state[key]))\n    temp[id].selected = !temp[id].selected\n    this.setState({\n      [key]: temp\n    })\n    // THIS IS WHAT I ADDED\n    var i;\n    var locations = \"\";\n    var eventtypes = \"\";\n    var freeornot = \"\";\n    for (i = 0; i < this.state.location.length; i++) {\n      if (this.state.location[i].selected == true) {\n        locations += (this.state.location[i].title + ',');\n      }\n    }\n    for (i = 0; i < this.state.eventtype.length; i++) {\n      if (this.state.eventtype[i].selected == true) {\n        eventtypes += (this.state.eventtype[i].title + ',');\n      }\n    }\n    for (i = 0; i < this.state.freeOrNot.length; i++) {\n      if (this.state.freeOrNot[i].selected == true) {\n        freeornot = this.state.freeOrNot[i].selected;\n      }\n    }\n    console.log(locations)\n    console.log(eventtypes)\n    console.log(freeornot)\n    const url_getEvents = url + 'getEventsFilter'\n    console.log(url_getEvents)\n    // Repopulate calendar when things are toggled\n    axios.get(url_getEvents, {\n      params: {\n        locations: locations,\n        eventtypes: eventtypes,\n        freeornot: freeornot\n    }})\n    .then(res => {\n      console.log(\"reached this point\")\n      const posts = JSON.parse(res.data.Events_JSON)\n      const events = [];\n      posts.forEach((post) => {\n  events.push({\n          title: post.fields.name,\n          start: new Date(post.fields.start_datetime),\n          end: new Date(post.fields.end_datetime),\n          desc: post.fields.description,\n          loc: post.fields.location,\n          website: post.fields.website,\n          org: getOrgName(post.fields.org),\n          is_free: post.fields.is_free\n        })\n      })\n      this.setState({events})\n      this._isMounted = true\n    })\n    .catch(function(error) {\n      console.log(error);\n      console.log(error.response.data);\n    })\n  }\n\n  componentDidMount() {\n    const url_getEvents = url + 'getEvents'\n    axios.get(url_getEvents)\n    .then(res => {\n      const posts = JSON.parse(res.data.Events_JSON)\n      const events = [];\n      posts.forEach(function(post){\n        events.push({\n          title: post.fields.name,\n          start: new Date(post.fields.start_datetime),\n          end: new Date(post.fields.end_datetime),\n          desc: post.fields.description,\n          loc: post.fields.location,\n          website: post.fields.website,\n          org: getOrgName(post.fields.org),\n          is_free: post.fields.is_free\n        })\n      })\n      this.setState({events})\n      this._isMounted = true\n    })\n    .catch(function(error) {\n      console.log(error);\n      console.log(error.response.data);\n    })\n  }\n\n  seeDetails = (event) => {\n    console.log('Org: ' + event.org)\n    this.props.changeToDetails(event);\n    this.props.history.push('/details')\n  }\n\n  eventStyleGetter(event) {\n    var color = orange\n    /* Can add logic here to color code */\n    var style = {\n      backgroundColor: color,\n      opacity: 0.8,\n      color: 'black',\n      border: '0px'\n    }\n    return {\n      style: style\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <DropdownMultiple\n            titleHelper=\"location\"\n            title=\"Select location\"\n            list={this.state.location}\n            toggleItem={this.toggleSelected}\n          />\n          <DropdownMultiple\n            titleHelper=\"event type\"\n            title=\"Select event type\"\n            list={this.state.eventtype}\n            toggleItem={this.toggleSelected}\n          />\n          <DropdownMultiple\n            titleHelper=\"free only\"\n            title=\"Free events only?\"\n            list={this.state.freeOrNot}\n            toggleItem={this.toggleSelected}\n          />\n        </div>\n        <div className='Calendar'>\n          <BigCalendar\n            localizer={localizer}\n            events={this.state.events}\n            defaultView={BigCalendar.Views.MONTH}\n            onSelectEvent={this.seeDetails}\n            views={['month', 'week', 'day']}\n            eventPropGetter={(this.eventStyleGetter)}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    /*title: state.eventReducer.title,\n    start: state.eventReducer.start,\n    end: state.eventReducer.end,\n    desc: state.eventReducer.desc,\n    location: state.eventReducer.location,\n    website: state.eventReducer.website,\n    org: state.eventReducer.org,\n    is_free: state.eventReducer.is_free*/\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeToDetails: (event) => dispatch({\n      type: 'changeToDetails',\n      payload: {\n        title: event.title,\n        start: event.start,\n        end: event.end,\n        desc: event.desc,\n        loc: event.loc,\n        website: event.website,\n        org: event.org,\n        is_free: event.is_free\n      }\n    })\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Calendar))\n"]},"metadata":{},"sourceType":"module"}