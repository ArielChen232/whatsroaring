{"ast":null,"code":"import _defineProperty from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/src/Pages/Calendar.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport moment from 'moment';\nimport BigCalendar from 'react-big-calendar'; // Styling\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport './Calendar.css';\nimport DropdownMultiple from './Components/DropdownMultiple';\nimport FilterForm from './Components/FilterForm';\nimport LogInButton from './Components/LogInButton';\nimport AddEventButton from './Components/AddEventButton';\nvar localizer = BigCalendar.momentLocalizer(moment); // const url = 'https://whatsroaring-api.herokuapp.com/'\n\nvar url = 'http://127.0.0.1:8000/';\nvar orange = '#fb8c00';\n\nfunction getOrgName(orgPk) {\n  var url_orgName = url + 'getOrgName/' + orgPk;\n  axios.get(url_orgName).then(function (res) {\n    var posts = JSON.parse(res.data.data);\n\n    if (posts.length >= 1) {\n      console.log('Org name: ' + posts[0].fields.name);\n      return posts[0].fields.name;\n    }\n  });\n} // return array of location objects to populate dropdown\n\n\nfunction getLocationObjects() {\n  var url_locs = url + 'getLocations';\n  axios.get(url_locs).then(function (res) {\n    var locs = res.data.locs;\n    var locs_arr = [];\n\n    for (var i = 0; i < locs.length; i++) {\n      locs_arr.push({\n        id: i,\n        title: locs[i],\n        selected: false,\n        key: 'location'\n      });\n    }\n\n    console.log(locs_arr);\n    return locs_arr;\n  });\n  return [];\n} // return array of organization objects to populate dropdown\n\n\nfunction getOrganizationObjects() {\n  var url_orgs = url + 'getOrganizations';\n  axios.get(url_orgs).then(function (res) {\n    var orgs = res.data.orgs;\n    var orgs_arr = [];\n\n    for (var i = 0; i < orgs.length; i++) {\n      orgs_arr.push({\n        id: i,\n        title: orgs[i],\n        selected: false,\n        key: 'organization'\n      });\n    }\n\n    return orgs_arr;\n  });\n  return [];\n}\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.toggleSelected = function (id, key) {\n      var temp = JSON.parse(JSON.stringify(_this.state[key]));\n      temp[id].selected = !temp[id].selected;\n\n      _this.setState(_defineProperty({}, key, temp));\n\n      var i;\n      var locations = \"\";\n      var categories = \"\";\n      var freeonly = \"\";\n\n      for (i = 0; i < _this.state.location.length; i++) {\n        if (_this.state.location[i].selected == true) {\n          locations += _this.state.location[i].title + ',';\n        }\n      }\n\n      for (i = 0; i < _this.state.category.length; i++) {\n        if (_this.state.category[i].selected == true) {\n          categories += _this.state.category[i].title + ',';\n        }\n      }\n\n      if (_this.state.freeOnly[0].selected == true) {\n        freeonly = \"true\";\n      } // remove trailing commas from strings\n\n\n      locations = locations.substr(0, locations.length - 1);\n      categories = categories.substr(0, categories.length - 1);\n      console.log(locations);\n      console.log(categories);\n      console.log(freeonly);\n      var url_getEvents = url + 'getEvents';\n      console.log(url_getEvents); // Repopulate calendar when things are toggled\n\n      axios.get(url_getEvents, {\n        params: {\n          locations: locations,\n          categories: categories,\n          is_free: freeonly\n        }\n      }).then(function (res) {\n        console.log(\"reached this point\");\n        var posts = JSON.parse(res.data.Events_JSON);\n        var events = [];\n        posts.forEach(function (post) {\n          events.push({\n            title: post.fields.name,\n            start: new Date(post.fields.start_datetime),\n            end: new Date(post.fields.end_datetime),\n            desc: post.fields.description,\n            loc: post.fields.location,\n            website: post.fields.website,\n            org: getOrgName(post.fields.org),\n            is_free: post.fields.is_free\n          });\n        });\n\n        _this.setState({\n          events: events\n        });\n\n        _this._isMounted = true;\n      }).catch(function (error) {\n        console.log(error);\n        console.log(error.response.data);\n      });\n    };\n\n    _this.seeDetails = function (event) {\n      console.log('Org: ' + event.org);\n\n      _this.props.changeToDetails(event);\n\n      _this.props.history.push('/details');\n    };\n\n    _this.state = {\n      events: [],\n      netid: '',\n      location: [],\n      category: [],\n      freeOnly: [{\n        id: 0,\n        title: 'Free events only',\n        selected: false,\n        key: 'freeOnly'\n      }]\n    };\n    _this._isMounted = false;\n    _this.eventStyleGetter = _this.eventStyleGetter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"LOCATION\");\n      console.log(getLocationObjects);\n      var url_getEvents = url + 'getEvents';\n      axios.get(url_getEvents).then(function (res) {\n        var posts = JSON.parse(res.data.Events_JSON);\n        var events = [];\n        posts.forEach(function (post) {\n          events.push({\n            title: post.fields.name,\n            start: new Date(post.fields.start_datetime),\n            end: new Date(post.fields.end_datetime),\n            desc: post.fields.description,\n            loc: post.fields.location,\n            website: post.fields.website,\n            org: getOrgName(post.fields.org),\n            is_free: post.fields.is_free\n          });\n        });\n\n        _this2.setState({\n          events: events\n        });\n\n        _this2._isMounted = true;\n      }).catch(function (error) {\n        console.log(error);\n        console.log(error.response.data);\n      });\n    }\n  }, {\n    key: \"eventStyleGetter\",\n    value: function eventStyleGetter(event) {\n      var color = orange;\n      /* Can add logic here to color code */\n\n      var style = {\n        backgroundColor: color,\n        opacity: 0.8,\n        color: 'black',\n        border: '0px'\n      };\n      return {\n        style: style\n      };\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var _this3 = this;\n\n      var query = new URLSearchParams(this.props.location.search);\n      var ticket = query.get('ticket');\n\n      if (ticket) {\n        var url_netid = url + \"netid?ticket=\" + ticket;\n        axios.get(url_netid).then(function (res) {\n          _this3.setState({\n            netid: res['data']\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var addEvent;\n      var adminList = ['rachelsc', '-'];\n      this.validate();\n      var isAdmin = adminList.includes(this.state.netid);\n\n      if (isAdmin) {\n        addEvent = React.createElement(AddEventButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        });\n      } else {\n        addEvent = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"right-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(LogInButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), addEvent), React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(DropdownMultiple, {\n        titleHelper: \"location\",\n        title: \"Select location\",\n        list: this.state.location,\n        toggleItem: this.toggleSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(DropdownMultiple, {\n        titleHelper: \"event type\",\n        title: \"Select event type\",\n        list: this.state.category,\n        toggleItem: this.toggleSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), React.createElement(DropdownMultiple, {\n        titleHelper: \"free only\",\n        title: \"Free events only?\",\n        list: this.state.freeOnly,\n        toggleItem: this.toggleSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"Calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(BigCalendar, {\n        localizer: localizer,\n        events: this.state.events,\n        defaultView: BigCalendar.Views.MONTH,\n        onSelectEvent: this.seeDetails,\n        views: ['month', 'week', 'day'],\n        eventPropGetter: this.eventStyleGetter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    /*title: state.eventReducer.title,\n    start: state.eventReducer.start,\n    end: state.eventReducer.end,\n    desc: state.eventReducer.desc,\n    location: state.eventReducer.location,\n    website: state.eventReducer.website,\n    org: state.eventReducer.org,\n    is_free: state.eventReducer.is_free*/\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeToDetails: function changeToDetails(event) {\n      return dispatch({\n        type: 'changeToDetails',\n        payload: {\n          title: event.title,\n          start: event.start,\n          end: event.end,\n          desc: event.desc,\n          loc: event.loc,\n          website: event.website,\n          org: event.org,\n          is_free: event.is_free\n        }\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Calendar));","map":{"version":3,"sources":["/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/src/Pages/Calendar.js"],"names":["React","Component","withRouter","connect","axios","moment","BigCalendar","DropdownMultiple","FilterForm","LogInButton","AddEventButton","localizer","momentLocalizer","url","orange","getOrgName","orgPk","url_orgName","get","then","res","posts","JSON","parse","data","length","console","log","fields","name","getLocationObjects","url_locs","locs","locs_arr","i","push","id","title","selected","key","getOrganizationObjects","url_orgs","orgs","orgs_arr","Calendar","args","toggleSelected","temp","stringify","state","setState","locations","categories","freeonly","location","category","freeOnly","substr","url_getEvents","params","is_free","Events_JSON","events","forEach","post","start","Date","start_datetime","end","end_datetime","desc","description","loc","website","org","_isMounted","catch","error","response","seeDetails","event","props","changeToDetails","history","netid","eventStyleGetter","bind","color","style","backgroundColor","opacity","border","query","URLSearchParams","search","ticket","url_netid","addEvent","adminList","validate","isAdmin","includes","Views","MONTH","mapStateToProps","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport moment from 'moment'\nimport BigCalendar from 'react-big-calendar'\n\n// Styling\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport './Calendar.css'\nimport DropdownMultiple from './Components/DropdownMultiple'\nimport FilterForm from './Components/FilterForm'\nimport LogInButton from './Components/LogInButton'\nimport AddEventButton from './Components/AddEventButton'\n\nconst localizer = BigCalendar.momentLocalizer(moment)\n// const url = 'https://whatsroaring-api.herokuapp.com/'\nconst url = 'http://127.0.0.1:8000/'\nconst orange = '#fb8c00'\n\nfunction getOrgName(orgPk) {\n  const url_orgName = url + 'getOrgName/' + orgPk\n  axios.get(url_orgName).then(res => {\n    const posts = JSON.parse(res.data.data)\n    if (posts.length >= 1) {\n      console.log('Org name: ' + posts[0].fields.name)\n      return posts[0].fields.name\n    }\n  })\n}\n\n// return array of location objects to populate dropdown\nfunction getLocationObjects() {\n  const url_locs = url + 'getLocations'\n  axios.get(url_locs).then(res => {\n    var locs = res.data.locs\n    var locs_arr = [];\n    for (var i = 0; i < locs.length; i++) {\n      locs_arr.push({\n        id: i,\n        title: locs[i],\n        selected: false,\n        key: 'location'\n      });\n    }\n    console.log(locs_arr)\n    return locs_arr\n  })\n  return []\n}\n\n// return array of organization objects to populate dropdown\nfunction getOrganizationObjects() {\n  const url_orgs = url + 'getOrganizations'\n  axios.get(url_orgs).then(res => {\n    var orgs = res.data.orgs\n    var orgs_arr = [];\n    for (var i = 0; i < orgs.length; i++) {\n      orgs_arr.push({\n        id: i,\n        title: orgs[i],\n        selected: false,\n        key: 'organization'\n      });\n    }\n    return orgs_arr\n  })\n  return []\n}\n\nclass Calendar extends Component {\n  constructor(...args) {\n    super(...args)\n    this.state = {\n      events: [],\n      netid: '',\n      location: [],\n      category: [],\n      freeOnly: [\n        {\n          id: 0,\n          title: 'Free events only',\n          selected: false,\n          key: 'freeOnly'\n        }\n      ]\n     }\n    this._isMounted = false\n    this.eventStyleGetter = this.eventStyleGetter.bind(this)\n  }\n\n  toggleSelected = (id, key) => {\n    let temp = JSON.parse(JSON.stringify(this.state[key]))\n    temp[id].selected = !temp[id].selected\n    this.setState({\n      [key]: temp\n    })\n    var i;\n    var locations = \"\";\n    var categories = \"\";\n    var freeonly = \"\";\n    for (i = 0; i < this.state.location.length; i++) {\n      if (this.state.location[i].selected == true) {\n        locations += (this.state.location[i].title + ',');\n      }\n    }\n    for (i = 0; i < this.state.category.length; i++) {\n      if (this.state.category[i].selected == true) {\n        categories += (this.state.category[i].title + ',');\n      }\n    }\n    if (this.state.freeOnly[0].selected == true) {\n      freeonly = \"true\"\n    }\n    // remove trailing commas from strings\n    locations = locations.substr(0, locations.length-1);\n    categories = categories.substr(0, categories.length-1);\n    console.log(locations)\n    console.log(categories)\n    console.log(freeonly)\n    const url_getEvents = url + 'getEvents'\n    console.log(url_getEvents)\n    // Repopulate calendar when things are toggled\n    axios.get(url_getEvents, {\n      params: {\n        locations: locations,\n        categories: categories,\n        is_free: freeonly\n    }})\n    .then(res => {\n      console.log(\"reached this point\")\n      const posts = JSON.parse(res.data.Events_JSON)\n      const events = [];\n      posts.forEach((post) => {\n  events.push({\n          title: post.fields.name,\n          start: new Date(post.fields.start_datetime),\n          end: new Date(post.fields.end_datetime),\n          desc: post.fields.description,\n          loc: post.fields.location,\n          website: post.fields.website,\n          org: getOrgName(post.fields.org),\n          is_free: post.fields.is_free\n        })\n      })\n      this.setState({events})\n      this._isMounted = true\n    })\n    .catch(function(error) {\n      console.log(error);\n      console.log(error.response.data);\n    })\n  }\n\n  componentDidMount() {\n    console.log(\"LOCATION\")\n    console.log(getLocationObjects)\n    const url_getEvents = url + 'getEvents'\n    axios.get(url_getEvents)\n    .then(res => {\n      const posts = JSON.parse(res.data.Events_JSON)\n      const events = [];\n      posts.forEach(function(post){\n        events.push({\n          title: post.fields.name,\n          start: new Date(post.fields.start_datetime),\n          end: new Date(post.fields.end_datetime),\n          desc: post.fields.description,\n          loc: post.fields.location,\n          website: post.fields.website,\n          org: getOrgName(post.fields.org),\n          is_free: post.fields.is_free\n        })\n      })\n      this.setState({events})\n      this._isMounted = true\n    })\n    .catch(function(error) {\n      console.log(error);\n      console.log(error.response.data);\n    })\n  }\n\n  seeDetails = (event) => {\n    console.log('Org: ' + event.org)\n    this.props.changeToDetails(event);\n    this.props.history.push('/details')\n  }\n\n  eventStyleGetter(event) {\n    var color = orange\n    /* Can add logic here to color code */\n    var style = {\n      backgroundColor: color,\n      opacity: 0.8,\n      color: 'black',\n      border: '0px'\n    }\n    return {\n      style: style\n    }\n  }\n\n  validate() {\n    const query = new URLSearchParams(this.props.location.search)\n    var ticket = query.get('ticket')\n    if (ticket) {\n      const url_netid = url + \"netid?ticket=\" + ticket\n      axios.get(url_netid)\n      .then(res => {\n        this.setState({netid: res['data']})\n      })\n      .catch(function(error) {\n        console.log(error);\n      })\n    }\n  }\n\n  render() {\n    var addEvent\n    const adminList = ['rachelsc', '-']\n    this.validate()\n    const isAdmin = adminList.includes(this.state.netid)\n    if (isAdmin) {\n      addEvent = <AddEventButton/>\n    }\n    else {\n      addEvent = <div></div>\n    }\n    return (\n      <div>\n        <div className=\"right-wrapper\">\n          <LogInButton/>\n          {addEvent}\n        </div>\n        <div className=\"wrapper\">\n          <DropdownMultiple\n            titleHelper=\"location\"\n            title=\"Select location\"\n            list={this.state.location}\n            toggleItem={this.toggleSelected}\n          />\n          <DropdownMultiple\n            titleHelper=\"event type\"\n            title=\"Select event type\"\n            list={this.state.category}\n            toggleItem={this.toggleSelected}\n          />\n          <DropdownMultiple\n            titleHelper=\"free only\"\n            title=\"Free events only?\"\n            list={this.state.freeOnly}\n            toggleItem={this.toggleSelected}\n          />\n        </div>\n        <div className='Calendar'>\n          <BigCalendar\n            localizer={localizer}\n            events={this.state.events}\n            defaultView={BigCalendar.Views.MONTH}\n            onSelectEvent={this.seeDetails}\n            views={['month', 'week', 'day']}\n            eventPropGetter={(this.eventStyleGetter)}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    /*title: state.eventReducer.title,\n    start: state.eventReducer.start,\n    end: state.eventReducer.end,\n    desc: state.eventReducer.desc,\n    location: state.eventReducer.location,\n    website: state.eventReducer.website,\n    org: state.eventReducer.org,\n    is_free: state.eventReducer.is_free*/\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeToDetails: (event) => dispatch({\n      type: 'changeToDetails',\n      payload: {\n        title: event.title,\n        start: event.start,\n        end: event.end,\n        desc: event.desc,\n        loc: event.loc,\n        website: event.website,\n        org: event.org,\n        is_free: event.is_free\n      }\n    })\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Calendar))\n"]},"metadata":{},"sourceType":"module"}