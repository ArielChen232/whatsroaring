{"ast":null,"code":"import _classCallCheck from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/src/Pages/Components/FilterForm.js\";\nimport axios from 'axios';\nimport { Cookies } from 'react-cookie';\nimport React, { Component } from 'react'; // I added this super basic form just to test the connection bw frontend/backend\n// code taken from https://www.reddit.com/r/django/comments/570qgn/how_do_i_pass_a_react_dom_states_information_to/\n// The input box should take the name of some location to filter by\n// The location should be sent to the backend as an Ajax request\n// In the backend I modified the getEvents method to handle filtering by location\n\nvar FilterForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FilterForm, _Component);\n\n  function FilterForm(props) {\n    var _this;\n\n    _classCallCheck(this, FilterForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FilterForm).call(this, props));\n\n    _this.handleLocationChange = function (event) {\n      _this.setState({\n        location: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function () {\n      // Gathering together the data you want to send to API\n      var payload = {\n        location: _this.state.location\n      }; // Method we're using to send data to API\n\n      _this.handleAjaxRequest(payload);\n    };\n\n    _this.handleAjaxRequest = function (payload) {\n      // [1] This is a POST request, so we need a CSRF token (unless otherwise\n      // omitted through Django, but omitted in this explanation)\n      var csrftoken = Cookies.get('csrftoken'); // Use your AJAX/HTTP library of choice. I'm using Axios[2] here.\n\n      var request = axios({\n        method: 'post',\n        // backend url to send data to\n        url: 'http://127.0.0.1:8000/getEvents',\n        data: payload,\n        headers: {\n          'X-CSRFToken': csrftoken\n        }\n      }); // Not sure what to do with this response. It should contain the new\n      // events, but somehow need to populate the calendar with them.\n      // currently it seems that on form submit the calendar page is simply\n      // reloaded, which is not what we want\n\n      request.then(function (response) {\n        console.log(response.data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    };\n\n    _this.state = {\n      location: ''\n    };\n    return _this;\n  } // onChange handler saves subject to state\n\n\n  _createClass(FilterForm, [{\n    key: \"render\",\n    value: function render() {\n      return (// Basic form\n        React.createElement(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          value: this.state.location,\n          onChange: this.handleLocationChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Send\"))\n      );\n    }\n  }]);\n\n  return FilterForm;\n}(Component);\n\nexport default FilterForm;","map":{"version":3,"sources":["/Users/clairedu/Desktop/College/cos333/calendar_project/whatsroaring/src/Pages/Components/FilterForm.js"],"names":["axios","Cookies","React","Component","FilterForm","props","handleLocationChange","event","setState","location","target","value","handleSubmit","payload","state","handleAjaxRequest","csrftoken","get","request","method","url","data","headers","then","response","console","log","catch","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;AACA;AACA;AACA;AACA;;IAEMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;;AADe,UASnBC,oBATmB,GASI,UAACC,KAAD,EAAW;AAAC,YAAKC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAAxB,OAAd;AAA8C,KAT9D;;AAAA,UAYnBC,YAZmB,GAYJ,YAAM;AACjB;AACA,UAAMC,OAAO,GAAG;AACZJ,QAAAA,QAAQ,EAAE,MAAKK,KAAL,CAAWL;AADT,OAAhB,CAFiB,CAMjB;;AACA,YAAKM,iBAAL,CAAuBF,OAAvB;AACH,KApBkB;;AAAA,UAuBnBE,iBAvBmB,GAuBC,UAACF,OAAD,EAAa;AAC7B;AACA;AACA,UAAMG,SAAS,GAAGf,OAAO,CAACgB,GAAR,CAAY,WAAZ,CAAlB,CAH6B,CAK7B;;AACA,UAAIC,OAAO,GAAGlB,KAAK,CAAC;AAChBmB,QAAAA,MAAM,EAAE,MADQ;AAEhB;AACAC,QAAAA,GAAG,EAAE,iCAHW;AAIhBC,QAAAA,IAAI,EAAER,OAJU;AAKhBS,QAAAA,OAAO,EAAE;AAAC,yBAAeN;AAAhB;AALO,OAAD,CAAnB,CAN6B,CAc7B;AACA;AACA;AACA;;AACAE,MAAAA,OAAO,CAACK,IAAR,CAAa,UAAAC,QAAQ,EAAI;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACH,IAArB;AACH,OAFD,EAGCM,KAHD,CAGO,UAAAC,KAAK,EAAI;AACZH,QAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH,OALD;AAMH,KA/CkB;;AAGf,UAAKd,KAAL,GAAa;AACTL,MAAAA,QAAQ,EAAC;AADA,KAAb;AAHe;AAMlB,G,CAED;;;;;6BAyCS;AACL,aACI;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAO,UAAA,KAAK,EAAE,KAAKK,KAAL,CAAWL,QAAzB;AAAmC,UAAA,QAAQ,EAAE,KAAKH,oBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAQ,UAAA,OAAO,EAAE,KAAKM,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAFJ;AAOH;;;;EA1DoBT,S;;AA6DzB,eAAeC,UAAf","sourcesContent":["import axios from 'axios';\nimport { Cookies } from 'react-cookie';\nimport React, { Component } from 'react';\n\n// I added this super basic form just to test the connection bw frontend/backend\n// code taken from https://www.reddit.com/r/django/comments/570qgn/how_do_i_pass_a_react_dom_states_information_to/\n// The input box should take the name of some location to filter by\n// The location should be sent to the backend as an Ajax request\n// In the backend I modified the getEvents method to handle filtering by location\n\nclass FilterForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            location:'',\n        }\n    }\n\n    // onChange handler saves subject to state\n    handleLocationChange = (event) => {this.setState({location: event.target.value})};\n\n    // Handler for the button/submit event\n    handleSubmit = () => {\n        // Gathering together the data you want to send to API\n        const payload = {\n            location: this.state.location,\n        };\n\n        // Method we're using to send data to API\n        this.handleAjaxRequest(payload);\n    };\n\n    // Method to send ContactForm's data to backend\n    handleAjaxRequest = (payload) => {\n        // [1] This is a POST request, so we need a CSRF token (unless otherwise\n        // omitted through Django, but omitted in this explanation)\n        const csrftoken = Cookies.get('csrftoken');\n\n        // Use your AJAX/HTTP library of choice. I'm using Axios[2] here.\n        let request = axios({\n            method: 'post',\n            // backend url to send data to\n            url: 'http://127.0.0.1:8000/getEvents',\n            data: payload,\n            headers: {'X-CSRFToken': csrftoken}\n        });\n\n        // Not sure what to do with this response. It should contain the new\n        // events, but somehow need to populate the calendar with them.\n        // currently it seems that on form submit the calendar page is simply\n        // reloaded, which is not what we want\n        request.then(response => {\n            console.log(response.data);\n        })\n        .catch(error => {\n            console.error(error);\n        })\n    };\n\n    render() {\n        return (\n            // Basic form\n            <form>\n                <input value={this.state.location} onChange={this.handleLocationChange} />\n                <button onClick={this.handleSubmit}>Send</button>\n            </form>\n        );\n    }\n}\n\nexport default FilterForm\n"]},"metadata":{},"sourceType":"module"}