{"ast":null,"code":"import _classCallCheck from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/leitan/Developer/whatsroaring/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/leitan/Developer/whatsroaring/src/Pages/Calendar.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport moment from 'moment';\nimport BigCalendar from 'react-big-calendar'; // Styling\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport './Calendar.css';\nvar localizer = BigCalendar.momentLocalizer(moment);\nvar url = 'https://whatsroaring-api.herokuapp.com/';\nvar orange = '#fb8c00';\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.seeDetails = function (event) {\n      _this.props.changeToDetails(event);\n\n      _this.props.history.push('/details');\n    };\n\n    _this.state = {\n      events: []\n    };\n    _this._isMounted = false;\n    _this.eventStyleGetter = _this.eventStyleGetter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getOrgName = _this.getOrgName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url_getEvents = url + 'getEvents';\n      axios.get(url_getEvents).then(function (res) {\n        var posts = JSON.parse(res.data.Events_JSON);\n        var events = [];\n        posts.forEach(function (post) {\n          events.push({\n            title: post.fields.name,\n            start: new Date(post.fields.start_datetime),\n            end: new Date(post.fields.end_datetime),\n            desc: post.fields.description,\n            loc: post.fields.location,\n            website: post.fields.website,\n            org: this.getOrgName(post.fields.org),\n            is_free: post.fields.is_free\n          });\n        });\n\n        _this2.setState({\n          events: events\n        });\n\n        _this2._isMounted = true;\n      });\n    }\n  }, {\n    key: \"getOrgName\",\n    value: function getOrgName(orgPk) {\n      var url_orgName = url + 'getOrgName/${orgPk}';\n      axios.get(url_orgName).then(function (res) {\n        var posts = JSON.parse(res.data.data);\n        var post;\n\n        if (posts.length == 1) {\n          post = posts[0];\n          console.log(post.fields.name);\n          return post.fields.name;\n        }\n      });\n    }\n  }, {\n    key: \"eventStyleGetter\",\n    value: function eventStyleGetter(event) {\n      var color = orange;\n      /* Can add logic here to color code */\n\n      var style = {\n        backgroundColor: color,\n        opacity: 0.8,\n        color: 'black',\n        border: '0px'\n      };\n      return {\n        style: style\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(BigCalendar, {\n        localizer: localizer,\n        events: this.state.events,\n        defaultView: BigCalendar.Views.MONTH,\n        onSelectEvent: this.seeDetails,\n        views: ['month', 'week', 'day'],\n        eventPropGetter: this.eventStyleGetter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    /*title: state.eventReducer.title,\n    start: state.eventReducer.start,\n    end: state.eventReducer.end,\n    desc: state.eventReducer.desc,\n    location: state.eventReducer.location,\n    website: state.eventReducer.website,\n    org: state.eventReducer.org,\n    is_free: state.eventReducer.is_free*/\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeToDetails: function changeToDetails(event) {\n      return dispatch({\n        type: 'changeToDetails',\n        payload: {\n          title: event.title,\n          start: event.start,\n          end: event.end,\n          desc: event.desc,\n          loc: event.loc,\n          website: event.website,\n          org: event.org,\n          is_free: event.is_free\n        }\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Calendar));","map":{"version":3,"sources":["/Users/leitan/Developer/whatsroaring/src/Pages/Calendar.js"],"names":["React","Component","withRouter","connect","axios","moment","BigCalendar","localizer","momentLocalizer","url","orange","Calendar","args","seeDetails","event","props","changeToDetails","history","push","state","events","_isMounted","eventStyleGetter","bind","getOrgName","url_getEvents","get","then","res","posts","JSON","parse","data","Events_JSON","forEach","post","title","fields","name","start","Date","start_datetime","end","end_datetime","desc","description","loc","location","website","org","is_free","setState","orgPk","url_orgName","length","console","log","color","style","backgroundColor","opacity","border","Views","MONTH","mapStateToProps","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport moment from 'moment'\nimport BigCalendar from 'react-big-calendar'\n\n// Styling\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport './Calendar.css'\n\n\nconst localizer = BigCalendar.momentLocalizer(moment)\nconst url = 'https://whatsroaring-api.herokuapp.com/'\nconst orange = '#fb8c00'\n\n\nclass Calendar extends Component {\n  constructor(...args) {\n    super(...args)\n    this.state = { events: [] }\n    this._isMounted = false\n    this.eventStyleGetter = this.eventStyleGetter.bind(this)\n    this.getOrgName = this.getOrgName.bind(this)\n  }\n\n  componentDidMount() {\n    const url_getEvents = url + 'getEvents'\n    axios.get(url_getEvents).then(res => {\n      const posts = JSON.parse(res.data.Events_JSON)\n      const events = [];\n      posts.forEach(function(post){\n        events.push({\n          title: post.fields.name, \n          start: new Date(post.fields.start_datetime), \n          end: new Date(post.fields.end_datetime),\n          desc: post.fields.description,\n          loc: post.fields.location,\n          website: post.fields.website,\n          org: this.getOrgName(post.fields.org),\n          is_free: post.fields.is_free\n        });\n      });\n      this.setState({events})\n      this._isMounted = true\n    })\n  }\n\n  getOrgName(orgPk) {\n    const url_orgName = url + 'getOrgName/${orgPk}'\n    axios.get(url_orgName).then(res => {\n      const posts = JSON.parse(res.data.data)\n      var post\n      if (posts.length == 1) {\n        post = posts[0]\n        console.log(post.fields.name)\n        return post.fields.name\n      }\n    })\n  }\n\n  seeDetails = (event) => {\n    this.props.changeToDetails(event);\n    this.props.history.push('/details')\n  }\n\n  eventStyleGetter(event) {\n    var color = orange\n    /* Can add logic here to color code */\n    var style = {\n      backgroundColor: color,\n      opacity: 0.8,\n      color: 'black',\n      border: '0px'\n    }\n    return {\n      style: style\n    }\n  }\n\n  render() {\n    return (\n      <div className='Calendar'>\n        <BigCalendar\n          localizer={localizer}\n          events={this.state.events}\n          defaultView={BigCalendar.Views.MONTH}\n          onSelectEvent={this.seeDetails}\n          views={['month', 'week', 'day']}\n          eventPropGetter={(this.eventStyleGetter)}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    /*title: state.eventReducer.title,\n    start: state.eventReducer.start,\n    end: state.eventReducer.end,\n    desc: state.eventReducer.desc,\n    location: state.eventReducer.location,\n    website: state.eventReducer.website,\n    org: state.eventReducer.org,\n    is_free: state.eventReducer.is_free*/\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeToDetails: (event) => dispatch({\n      type: 'changeToDetails', \n      payload: {\n        title: event.title, \n        start: event.start,\n        end: event.end,\n        desc: event.desc,\n        loc: event.loc,\n        website: event.website,\n        org: event.org,\n        is_free: event.is_free\n      }\n    })\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Calendar))\n"]},"metadata":{},"sourceType":"module"}