{"ast":null,"code":"import _defineProperty from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/leitan/Developer/whatsroaring/src/Pages/Calendar.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport moment from 'moment';\nimport CASClient from './CASClient'; // Components\n\nimport BigCalendar from 'react-big-calendar';\nimport DropdownMultiple from './Components/DropdownMultiple';\nimport AddEventButton from './Components/AddEventButton';\nimport AddOrgButton from './Components/AddOrgButton';\nimport Footer from './Components/Footer';\nimport Header from './Components/Header';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Theme from '../Assets/Theme';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport ArrowForward from '@material-ui/icons/ArrowForward';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Container, Row, Col, Jumbotron } from //Button\n'reactstrap'; // Styling\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport './Calendar.css';\nvar localizer = BigCalendar.momentLocalizer(moment);\nvar url = 'https://whatsroaring-api.herokuapp.com/';\nvar url_details = 'https://whatsroaring.herokuapp.com/details'; // const url = 'http://127.0.0.1:8000/'\n\nvar orange = '#fb8c00';\nvar monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\nfunction getStartOfMonth() {\n  var today = new Date();\n  today.setDate(1);\n  return today;\n} // function to sort dropdown components\n\n\nfunction compareDropdown(a, b) {\n  var compA = a.toUpperCase();\n  var compB = b.toUpperCase();\n  if (compA < compB) return -1;\n  if (compA > compB) return 1;\n  return 0;\n}\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getCustomToolbar = function (toolbar) {\n      _this.toolbarDate = toolbar.date;\n\n      var goToBack = function goToBack() {\n        toolbar.onNavigate('back', _this.prevMonth());\n      };\n\n      var goToNext = function goToNext() {\n        toolbar.onNavigate('next', _this.nextMonth());\n      };\n\n      var goToToday = function goToToday() {\n        var day = new Date();\n\n        _this.setState({\n          month: getStartOfMonth()\n        });\n\n        toolbar.onNavigate('today', day);\n      };\n\n      return React.createElement(\"div\", {\n        className: \"ToolbarCalendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(MuiThemeProvider, {\n        theme: Theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"month\",\n        variant: \"h3\",\n        component: \"h3\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, monthNames[_this.state.month.getMonth()] + ' ' + _this.state.month.getFullYear())), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ToolbarButtons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ToolbarItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"primary\",\n        onClick: goToBack,\n        variant: \"contained\",\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(ArrowBack, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"ToolbarItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        color: \"primary\",\n        onClick: goToNext,\n        variant: \"contained\",\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(ArrowForward, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"ToolbarItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: goToToday,\n        size: \"medium\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Today\")))))));\n    };\n\n    _this.handleCheckFree = function (name) {\n      _this.setState({\n        checkedFree: !_this.state.checkedFree\n      }, function () {\n        return _this.filterEvents();\n      });\n    };\n\n    _this.handleCheckFav = function (name) {\n      _this.setState({\n        checkedFav: !_this.state.checkedFav\n      }, function () {\n        return _this.filterEvents();\n      });\n    };\n\n    _this.onStartChange = function (date) {\n      _this.setState({\n        start_datetime: date\n      });\n    };\n\n    _this.onEndChange = function (date) {\n      _this.setState({\n        end_datetime: date\n      });\n    };\n\n    _this.toggleSelected = function (id, key) {\n      var temp = JSON.parse(JSON.stringify(_this.state[key]));\n      temp[id].selected = !temp[id].selected;\n\n      _this.setState(_defineProperty({}, key, temp), function () {\n        return _this.filterEvents();\n      });\n    };\n\n    _this.updateFilter = function (listName, selectedList) {\n      _this.setState(_defineProperty({}, listName + '_selected', selectedList), function () {\n        return _this.filterEvents();\n      });\n    };\n\n    _this.filterEvents = function () {\n      var i;\n      var locations = \"\";\n      var categories = \"\";\n      var organizations = \"\";\n      var is_free = \"\";\n      var netid = localStorage.getItem('netid');\n      var favorites = \"\";\n\n      for (i = 0; i < _this.state.locations.length; i++) {\n        if (_this.state.locations_selected.includes(_this.state.locations[i].title)) {\n          locations += _this.state.locations[i].title + ',';\n        }\n      }\n\n      for (i = 0; i < _this.state.categories.length; i++) {\n        if (_this.state.categories_selected.includes(_this.state.categories[i].title)) {\n          categories += _this.state.categories[i].title + ',';\n        }\n      }\n\n      for (i = 0; i < _this.state.organizations.length; i++) {\n        if (_this.state.organizations_selected.includes(_this.state.organizations[i].title)) {\n          organizations += _this.state.organizations[i].title + ',';\n        }\n      } // remove trailing commas from strings\n\n\n      locations = locations.substr(0, locations.length - 1);\n      categories = categories.substr(0, categories.length - 1);\n      organizations = organizations.substr(0, organizations.length - 1);\n\n      if (_this.state.checkedFree === true) {\n        is_free = \"true\";\n      }\n\n      if (_this.state.checkedFav === true) {\n        favorites = \"true\";\n      }\n\n      _this.updateCalendar(locations, categories, organizations, is_free, favorites);\n    };\n\n    _this.seeDetails = function (event) {\n      _this.props.changeToDetails(event, _this.state.month, _this.state.organizations_selected, _this.state.categories_selected, _this.state.locations_selected, _this.state.checkedFree, _this.state.checkedFav);\n\n      _this.props.history.push('/details');\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.renderCalendar = function () {\n      if (_this._isMounted === true) {\n        return React.createElement(BigCalendar, {\n          localizer: localizer,\n          events: _this.state.events,\n          defaultView: BigCalendar.Views.MONTH,\n          onSelectEvent: _this.seeDetails,\n          views: ['month', 'week'],\n          eventPropGetter: _this.eventStyleGetter,\n          defaultDate: _this.state.month,\n          components: {\n            toolbar: _this.getCustomToolbar\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this.state = {\n      // loading: true,\n      events: [],\n      locations: [],\n      categories: [],\n      organizations: [],\n      locations_selected: [],\n      categories_selected: [],\n      organizations_selected: [],\n      checkedFree: false,\n      checkedFav: false,\n      start_datetime: new Date(),\n      end_datetime: new Date(),\n      display_date: new Date(),\n      month: getStartOfMonth(),\n      changed_view: false // if user has changed calendar settings\n\n    };\n    _this._isMounted = false;\n    _this.eventStyleGetter = _this.eventStyleGetter.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getCustomToolbar = _this.getCustomToolbar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Get all locations, organizations, and categories\n      var url_locs = url + 'getLocations';\n      var locs_arr = [];\n      axios.get(url_locs).then(function (res) {\n        var locs = res.data.locs;\n        locs.sort(compareDropdown);\n\n        for (var i = 0; i < locs.length; i++) {\n          locs_arr.push({\n            id: i,\n            title: locs[i],\n            selected: false,\n            key: 'locations'\n          });\n        }\n\n        _this2.setState({\n          locations: locs_arr\n        }, function () {\n          return _this2.filterEvents();\n        });\n      });\n      var url_cats = url + 'getCategories';\n      var cats_arr = [];\n      axios.get(url_cats).then(function (res) {\n        var cats = res.data.cats;\n        cats.sort(compareDropdown);\n\n        for (var i = 0; i < cats.length; i++) {\n          cats_arr.push({\n            id: i,\n            title: cats[i],\n            selected: false,\n            key: 'categories'\n          });\n        }\n\n        _this2.setState({\n          categories: cats_arr\n        }, function () {\n          return _this2.filterEvents();\n        });\n      });\n      var url_orgs = url + 'getOrganizations';\n      var orgs_arr = [];\n      axios.get(url_orgs).then(function (res) {\n        var orgs = res.data.orgs;\n        orgs.sort(compareDropdown);\n\n        for (var i = 0; i < orgs.length; i++) {\n          orgs_arr.push({\n            id: i,\n            title: orgs[i],\n            selected: false,\n            key: 'organizations'\n          });\n        }\n\n        _this2.setState({\n          organizations: orgs_arr\n        }, function () {\n          return _this2.filterEvents();\n        });\n      });\n\n      if (this.props.changed_view === false) {\n        console.log('Default view');\n        this.setState({\n          locations_selected: [],\n          categories_selected: [],\n          organizations_selected: [],\n          is_free: this.state.checkedFree,\n          favorites: this.state.checkedFav\n        }, function () {\n          return _this2.filterEvents();\n        });\n      } else {\n        console.log('Recovering view');\n        this.setState({\n          locations_selected: this.props.locations_selected,\n          categories_selected: this.props.categories_selected,\n          organizations_selected: this.props.organizations_selected,\n          is_free: this.props.checked_free,\n          favorites: this.props.checked_fav,\n          checkedFree: this.props.checked_free,\n          checkedFav: this.props.checked_fav,\n          month: this.props.month\n        }, function () {\n          return _this2.filterEvents();\n        });\n      }\n\n      this._isMounted = true; // var cas = new CASClient()\n      // cas.authenticate(() => this.setState({loading: false}))\n    }\n  }, {\n    key: \"nextMonth\",\n    value: function nextMonth() {\n      var day = new Date(this.state.month);\n\n      if (day.getMonth() == 11) {\n        day.setMonth(0);\n        day.setFullYear(day.getFullYear() + 1);\n      } else {\n        day.setMonth(day.getMonth() + 1);\n      }\n\n      this.setState({\n        month: new Date(day.toLocaleString())\n      });\n      return day;\n    }\n  }, {\n    key: \"prevMonth\",\n    value: function prevMonth() {\n      var day = new Date(this.state.month);\n\n      if (day.getMonth() == 0) {\n        day.setMonth(11);\n        day.setFullYear(day.getFullYear() - 1);\n      } else {\n        day.setMonth(day.getMonth() - 1);\n      }\n\n      this.setState({\n        month: new Date(day.toLocaleString())\n      });\n      return day;\n    }\n  }, {\n    key: \"getStateFromStorage\",\n    value: function getStateFromStorage(callback) {\n      var state = {};\n\n      for (var key in this.state) {\n        console.log(key); // if the key exists in sessionStorage\n\n        if (sessionStorage.hasOwnProperty(key)) {\n          // get the key's value from sessionStorage\n          var value = sessionStorage.getItem(key);\n          console.log(value); // parse the sessionStorage string and setState\n\n          try {\n            value = JSON.parse(value);\n            state[key] = value;\n          } catch (e) {// handle empty string\n          }\n        }\n      }\n\n      console.log(state);\n      return state;\n    }\n  }, {\n    key: \"saveStateToStorage\",\n    value: function saveStateToStorage() {\n      // save state to local storage so it can be loaded\n      console.log('state saved');\n\n      for (var key in this.state) {\n        if (key !== 'events') {\n          sessionStorage.setItem(key, JSON.stringify(this.state[key]));\n        }\n      }\n    }\n  }, {\n    key: \"updateCalendar\",\n    value: function updateCalendar() {\n      var _this3 = this;\n\n      var locations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      var categories = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n      var organizations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n      var is_free = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n      var start_date = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"\";\n      var end_date = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"\";\n      var favorites = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : \"\";\n      // empty string for parameters indicates select all of them\n      // Repopulate calendar\n      var url_getEvents = url + 'getEvents';\n      var events = [];\n      axios.get(url_getEvents, {\n        params: {\n          locations: locations,\n          categories: categories,\n          organizations: organizations,\n          is_free: is_free,\n          favorites: favorites\n        }\n      }).then(function (res) {\n        var posts = JSON.parse(res.data.Events_JSON);\n        posts.forEach(function (post) {\n          events.push({\n            title: post.fields.name,\n            start: new Date(post.fields.start_datetime),\n            end: new Date(post.fields.end_datetime),\n            desc: post.fields.description,\n            loc: post.fields.location,\n            website: post.fields.website,\n            org: post.fields.org,\n            is_free: post.fields.is_free,\n            cat: post.fields.category\n          });\n        });\n      }).then(function (res) {\n        _this3.setState({\n          events: events\n        });\n      }).catch(function (error) {\n        console.log(error);\n        console.log(error.response.data);\n      });\n    }\n  }, {\n    key: \"eventStyleGetter\",\n    value: function eventStyleGetter(event) {\n      var color = orange;\n      /* Can add logic here to color code */\n\n      var style = {\n        backgroundColor: color,\n        opacity: 0.8,\n        color: 'black',\n        border: '0px'\n      };\n      return {\n        style: style\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // if authentication is not complete, display a loading page\n      // if (this.state.loading == true) {\n      //   return (\n      //     <div className=\"container\">\n      //       <h4>Loading...</h4>\n      //     </div>\n      //   )\n      // }\n      var addEvent = React.createElement(AddEventButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      });\n      var addOrg = React.createElement(AddOrgButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }); // const adminList = ['rachelsc', 'clairedu']\n      // const isAdmin = adminList.includes(localStorage.getItem('netid'))\n      // if (isAdmin) {\n      //   addEvent = <AddEventButton/>\n      //   addOrg = <AddOrgButton/>\n      // }\n      // else {\n      //   addEvent = <div></div>\n      //   addOrg = <div></div>\n      // }\n\n      if (this._isMounted === true) {\n        return React.createElement(MuiThemeProvider, {\n          theme: Theme,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 485\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"CalendarPage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 486\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"full-width\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488\n          },\n          __self: this\n        }, React.createElement(\"header\", {\n          className: \"calendarhead\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 491\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"CalendarOptions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 493\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"FilterItemsTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 494\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          className: \"month\",\n          variant: \"subtitle1\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 495\n          },\n          __self: this\n        }, \"Filter Events\")), React.createElement(\"div\", {\n          className: \"FilterItems\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"Menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500\n          },\n          __self: this\n        }, React.createElement(DropdownMultiple, {\n          titleHelper: \"location\",\n          title: \"Locations\",\n          list: this.state.locations,\n          updateFilter: this.updateFilter,\n          selectedList: this.state.locations_selected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 501\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"Menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510\n          },\n          __self: this\n        }, React.createElement(DropdownMultiple, {\n          titleHelper: \"event type\",\n          title: \"Categories\",\n          list: this.state.categories,\n          updateFilter: this.updateFilter,\n          selectedList: this.state.categories_selected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 511\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"Menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 520\n          },\n          __self: this\n        }, React.createElement(DropdownMultiple, {\n          titleHelper: \"organization\",\n          title: \"Organizations\",\n          list: this.state.organizations,\n          updateFilter: this.updateFilter,\n          selectedList: this.state.organizations_selected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 521\n          },\n          __self: this\n        })), React.createElement(FormGroup, {\n          row: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 530\n          },\n          __self: this\n        }, React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedFree,\n            onChange: this.handleCheckFree,\n            value: \"checkedA\",\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 533\n            },\n            __self: this\n          }),\n          label: \"Free Events\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 531\n          },\n          __self: this\n        }), React.createElement(FormControlLabel, {\n          control: React.createElement(Checkbox, {\n            checked: this.state.checkedFav,\n            onChange: this.handleCheckFav,\n            value: \"checkedA\",\n            color: \"primary\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 545\n            },\n            __self: this\n          }),\n          label: \"Favorites\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 543\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          className: \"AddButtons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 559\n          },\n          __self: this\n        }, addEvent, addOrg)), React.createElement(\"div\", {\n          className: \"Calendar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 566\n          },\n          __self: this\n        }, this.renderCalendar())));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 575\n          },\n          __self: this\n        })\n        /* Try loading sign */\n        ;\n      }\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    changed_view: state.calReducer.changed_view,\n    organizations_selected: state.calReducer.organizations_selected,\n    categories_selected: state.calReducer.categories_selected,\n    locations_selected: state.calReducer.locations_selected,\n    month: state.calReducer.month,\n    checked_free: state.calReducer.checked_free,\n    checked_fav: state.calReducer.checked_fav\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeToDetails: function changeToDetails(event, month, organizations, categories, locations, checked_free, checked_fav) {\n      return dispatch({\n        type: 'changeToDetails',\n        payload: {\n          title: event.title,\n          start: event.start,\n          end: event.end,\n          desc: event.desc,\n          loc: event.loc,\n          website: event.website,\n          org: event.org,\n          is_free: event.is_free,\n          cat: event.cat,\n          month: month,\n          categories_selected: categories,\n          organizations_selected: organizations,\n          locations_selected: locations,\n          changed_view: true,\n          checked_free: checked_free,\n          checked_fav: checked_fav\n        }\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Calendar));","map":{"version":3,"sources":["/Users/leitan/Developer/whatsroaring/src/Pages/Calendar.js"],"names":["React","Component","withRouter","connect","axios","moment","CASClient","BigCalendar","DropdownMultiple","AddEventButton","AddOrgButton","Footer","Header","MuiThemeProvider","Theme","Grid","Typography","FormGroup","FormControlLabel","Checkbox","Button","IconButton","ArrowBack","ArrowForward","InputLabel","MenuItem","Select","Input","ListItemText","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","Container","Row","Col","Jumbotron","localizer","momentLocalizer","url","url_details","orange","monthNames","getStartOfMonth","today","Date","setDate","compareDropdown","a","b","compA","toUpperCase","compB","Calendar","args","getCustomToolbar","toolbar","toolbarDate","date","goToBack","onNavigate","prevMonth","goToNext","nextMonth","goToToday","day","setState","month","state","getMonth","getFullYear","handleCheckFree","name","checkedFree","filterEvents","handleCheckFav","checkedFav","onStartChange","start_datetime","onEndChange","end_datetime","toggleSelected","id","key","temp","JSON","parse","stringify","selected","updateFilter","listName","selectedList","i","locations","categories","organizations","is_free","netid","localStorage","getItem","favorites","length","locations_selected","includes","title","categories_selected","organizations_selected","substr","updateCalendar","seeDetails","event","props","changeToDetails","history","push","handleChange","target","value","renderCalendar","_isMounted","events","Views","MONTH","eventStyleGetter","display_date","changed_view","bind","url_locs","locs_arr","get","then","res","locs","data","sort","url_cats","cats_arr","cats","url_orgs","orgs_arr","orgs","console","log","checked_free","checked_fav","setMonth","setFullYear","toLocaleString","callback","sessionStorage","hasOwnProperty","e","setItem","start_date","end_date","url_getEvents","params","posts","Events_JSON","forEach","post","fields","start","end","desc","description","loc","location","website","org","cat","category","catch","error","response","color","style","backgroundColor","opacity","border","addEvent","addOrg","mapStateToProps","calReducer","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport moment from 'moment'\nimport CASClient from './CASClient'\n\n// Components\nimport BigCalendar from 'react-big-calendar'\nimport DropdownMultiple from './Components/DropdownMultiple'\nimport AddEventButton from './Components/AddEventButton'\nimport AddOrgButton from './Components/AddOrgButton'\nimport Footer from './Components/Footer'\nimport Header from './Components/Header'\n\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport Theme from '../Assets/Theme'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowBack from '@material-ui/icons/ArrowBack'\nimport ArrowForward from '@material-ui/icons/ArrowForward'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport Input from '@material-ui/core/Input'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Container,\n    Row,\n    Col,\n    Jumbotron,\n    //Button\n} from 'reactstrap';\n\n// Styling\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport './Calendar.css'\n\n\nconst localizer = BigCalendar.momentLocalizer(moment)\nconst url = 'https://whatsroaring-api.herokuapp.com/'\nconst url_details = 'https://whatsroaring.herokuapp.com/details'\n// const url = 'http://127.0.0.1:8000/'\nconst orange = '#fb8c00'\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n]\n\nfunction getStartOfMonth() {\n  var today = new Date()\n  today.setDate(1)\n  return today\n}\n\n// function to sort dropdown components\nfunction compareDropdown(a, b) {\n  var compA = a.toUpperCase();\n  var compB = b.toUpperCase();\n  if (compA < compB) return -1;\n  if (compA > compB) return 1;\n  return 0;\n}\n\n\nclass Calendar extends Component {\n\n  constructor(...args) {\n    super(...args)\n    this.state = {\n      // loading: true,\n      events: [],\n      locations: [],\n      categories: [],\n      organizations: [],\n      locations_selected: [],\n      categories_selected: [],\n      organizations_selected: [],\n      checkedFree: false,\n      checkedFav: false,\n      start_datetime: new Date(),\n      end_datetime: new Date(),\n      display_date: new Date(),\n      month: getStartOfMonth(),\n      changed_view: false, // if user has changed calendar settings\n    }\n    this._isMounted = false\n    this.eventStyleGetter = this.eventStyleGetter.bind(this)\n    this.getCustomToolbar = this.getCustomToolbar.bind(this)\n  }\n\n  componentDidMount() {\n    // Get all locations, organizations, and categories\n    const url_locs = url + 'getLocations'\n    var locs_arr = [];\n    axios.get(url_locs).then(res => {\n      var locs = res.data.locs\n      locs.sort(compareDropdown)\n      for (var i = 0; i < locs.length; i++) {\n        locs_arr.push({\n          id: i,\n          title: locs[i],\n          selected: false,\n          key: 'locations'\n        });\n      }\n      this.setState({\n        locations: locs_arr\n      }, () => this.filterEvents())\n    })\n\n    const url_cats = url + 'getCategories'\n    var cats_arr = [];\n    axios.get(url_cats).then(res => {\n      var cats = res.data.cats\n      cats.sort(compareDropdown)\n      for (var i = 0; i < cats.length; i++) {\n        cats_arr.push({\n          id: i,\n          title: cats[i],\n          selected: false,\n          key: 'categories'\n        });\n      }\n      this.setState({\n        categories: cats_arr\n      }, () => this.filterEvents())\n    })\n\n    const url_orgs = url + 'getOrganizations'\n    var orgs_arr = [];\n    axios.get(url_orgs).then(res => {\n      var orgs = res.data.orgs\n      orgs.sort(compareDropdown)\n      for (var i = 0; i < orgs.length; i++) {\n        orgs_arr.push({\n          id: i,\n          title: orgs[i],\n          selected: false,\n          key: 'organizations'\n        });\n      }\n      this.setState({\n        organizations: orgs_arr\n      }, () => this.filterEvents())\n    })\n    \n    if (this.props.changed_view === false) {\n      console.log('Default view')\n      this.setState({\n        locations_selected: [],\n        categories_selected: [],\n        organizations_selected: [],\n        is_free: this.state.checkedFree,\n        favorites: this.state.checkedFav\n      }, () => this.filterEvents())\n    } else {\n      console.log('Recovering view')\n      this.setState({\n        locations_selected: this.props.locations_selected,\n        categories_selected: this.props.categories_selected,\n        organizations_selected: this.props.organizations_selected,\n        is_free: this.props.checked_free,\n        favorites: this.props.checked_fav,\n        checkedFree: this.props.checked_free,\n        checkedFav: this.props.checked_fav,\n        month: this.props.month,\n     }, () => this.filterEvents())\n    }\n\n    this._isMounted = true\n    // var cas = new CASClient()\n    // cas.authenticate(() => this.setState({loading: false}))\n  }\n\n  nextMonth() {\n    var day = new Date(this.state.month)\n    if (day.getMonth() == 11) {\n      day.setMonth(0)\n      day.setFullYear(day.getFullYear() + 1)\n    } else {\n      day.setMonth(day.getMonth() + 1)\n    }\n    this.setState({\n      month: new Date(day.toLocaleString())\n    })\n    return day\n  }\n\n  prevMonth() {\n    var day = new Date(this.state.month)\n    if (day.getMonth() == 0) {\n      day.setMonth(11)\n      day.setFullYear(day.getFullYear() - 1)\n    } else {\n      day.setMonth(day.getMonth() - 1)\n    }\n    this.setState({\n      month: new Date(day.toLocaleString())\n    })\n    return day\n  }\n\n  getCustomToolbar = (toolbar) => {\n    this.toolbarDate = toolbar.date\n    const goToBack = () => {\n      toolbar.onNavigate('back', this.prevMonth())\n    }\n    const goToNext = () => {\n      toolbar.onNavigate('next', this.nextMonth())\n    }\n    const goToToday =() => {\n      var day = new Date()\n      this.setState({\n        month: getStartOfMonth()\n      })\n      toolbar.onNavigate('today', day)\n    }\n\n    return (\n      <div className='ToolbarCalendar'>\n        <MuiThemeProvider theme={Theme}>\n          <Grid container>\n            <Grid item xs={6}>\n              <Typography className=\"month\" variant=\"h3\" component=\"h3\" color=\"primary\">\n                {monthNames[this.state.month.getMonth()] + ' ' +  this.state.month.getFullYear()}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <div className='ToolbarButtons'>\n                <div className='ToolbarItem'>\n                  <IconButton color=\"primary\" onClick={goToBack} variant=\"contained\" size=\"small\">\n                    <ArrowBack />\n                  </IconButton>\n                </div>\n                <div className='ToolbarItem'>\n                  <IconButton color=\"primary\" onClick={goToNext} variant=\"contained\" size=\"small\">\n                    <ArrowForward />\n                  </IconButton>\n                </div>\n                <div className='ToolbarItem'>\n                  <Button color=\"primary\" onClick={goToToday} size=\"medium\" variant=\"outlined\">\n                    Today\n                  </Button>\n                </div>\n              </div>\n            </Grid>\n          </Grid>\n        </MuiThemeProvider>\n      </div>\n    )\n  }\n\n  handleCheckFree = name => {\n    this.setState({\n      checkedFree: !this.state.checkedFree\n    }, () => this.filterEvents());\n  }\n\n  handleCheckFav = name => {\n    this.setState({\n      checkedFav: !this.state.checkedFav\n    }, () => this.filterEvents());\n  }\n\n  onStartChange = date => {\n    this.setState({\n      start_datetime: date })}\n\n  onEndChange = date => {\n    this.setState({\n      end_datetime: date })}\n\n  toggleSelected = (id, key) => {\n    let temp = JSON.parse(JSON.stringify(this.state[key]))\n    temp[id].selected = !temp[id].selected\n    this.setState({\n      [key]: temp\n    }, () => this.filterEvents())\n  }\n\n  updateFilter = (listName, selectedList) => {\n    this.setState({\n      [listName + '_selected']: selectedList,\n    }, () => this.filterEvents())\n  }\n\n  getStateFromStorage(callback) {\n    var state = {}\n    for (let key in this.state) {\n      console.log(key)\n      // if the key exists in sessionStorage\n      if (sessionStorage.hasOwnProperty(key)) {\n        // get the key's value from sessionStorage\n        let value = sessionStorage.getItem(key);\n        console.log(value)\n        // parse the sessionStorage string and setState\n        try {\n          value = JSON.parse(value);\n          state[key] = value;\n        } catch (e) {\n          // handle empty string\n        }\n      }\n    }\n    console.log(state)\n    return state\n  }\n\n  saveStateToStorage() {\n    // save state to local storage so it can be loaded\n    console.log('state saved')\n    for (let key in this.state) {\n      if (key !== 'events') {\n        sessionStorage.setItem(key, JSON.stringify(this.state[key]));\n      }\n    }\n  }\n\n  updateCalendar(locations=\"\", categories=\"\", organizations=\"\", is_free=\"\",\n    start_date = \"\", end_date = \"\", favorites = \"\") {\n    // empty string for parameters indicates select all of them\n    // Repopulate calendar\n    const url_getEvents = url + 'getEvents'\n    const events = [];\n    axios.get(url_getEvents, {\n      params: {\n        locations: locations,\n        categories: categories,\n        organizations: organizations,\n        is_free: is_free,\n        favorites: favorites\n    }})\n    .then(res => {\n      const posts = JSON.parse(res.data.Events_JSON)\n\n      posts.forEach((post) => {\n        events.push({\n          title: post.fields.name,\n          start: new Date(post.fields.start_datetime),\n          end: new Date(post.fields.end_datetime),\n          desc: post.fields.description,\n          loc: post.fields.location,\n          website: post.fields.website,\n          org: post.fields.org,\n          is_free: post.fields.is_free,\n          cat: post.fields.category\n        })\n      })\n    })\n    .then(res => {\n      this.setState({events: events})\n    })\n    .catch(function(error) {\n      console.log(error);\n      console.log(error.response.data);\n    })\n  }\n\n  filterEvents = () => {\n    var i;\n    var locations = \"\";\n    var categories = \"\";\n    var organizations = \"\";\n    var is_free = \"\";\n    var netid = localStorage.getItem('netid')\n    var favorites = \"\";\n    for (i = 0; i < this.state.locations.length; i++) {\n      if (this.state.locations_selected.includes(this.state.locations[i].title)) {\n        locations += (this.state.locations[i].title + ',');\n      }\n    }\n    for (i = 0; i < this.state.categories.length; i++) {\n      if (this.state.categories_selected.includes(this.state.categories[i].title)) {\n        categories += (this.state.categories[i].title + ',');\n      }\n    }\n    for (i = 0; i < this.state.organizations.length; i++) {\n      if (this.state.organizations_selected.includes(this.state.organizations[i].title)) {\n        organizations += (this.state.organizations[i].title + ',');\n      }\n    }\n    // remove trailing commas from strings\n    locations = locations.substr(0, locations.length-1);\n    categories = categories.substr(0, categories.length-1);\n    organizations = organizations.substr(0, organizations.length-1);\n    if (this.state.checkedFree === true) {\n      is_free = \"true\"\n    }\n    if (this.state.checkedFav === true) {\n      favorites = \"true\"\n    }\n    this.updateCalendar(\n      locations,\n      categories,\n      organizations,\n      is_free,\n      favorites)\n  }\n\n  seeDetails = (event) => {\n    this.props.changeToDetails(\n      event, \n      this.state.month,\n      this.state.organizations_selected,\n      this.state.categories_selected,\n      this.state.locations_selected,\n      this.state.checkedFree,\n      this.state.checkedFav)\n    this.props.history.push('/details')\n  }\n\n  eventStyleGetter(event) {\n    var color = orange\n    /* Can add logic here to color code */\n    var style = {\n      backgroundColor: color,\n      opacity: 0.8,\n      color: 'black',\n      border: '0px'\n    }\n    return {\n      style: style\n    }\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    })\n  }\n\n  renderCalendar = () => {\n    if (this._isMounted === true) {\n      return (\n        <BigCalendar\n          localizer={localizer}\n          events={this.state.events}\n          defaultView={BigCalendar.Views.MONTH}\n          onSelectEvent={this.seeDetails}\n          views={['month', 'week']}\n          eventPropGetter={(this.eventStyleGetter)}\n          defaultDate={this.state.month}\n          components={{toolbar: this.getCustomToolbar}}\n        />\n      )\n    }\n  }\n\n  render() {\n    // if authentication is not complete, display a loading page\n    // if (this.state.loading == true) {\n    //   return (\n    //     <div className=\"container\">\n    //       <h4>Loading...</h4>\n    //     </div>\n    //   )\n    // }\n    var addEvent = <AddEventButton/>\n    var addOrg = <AddOrgButton/>\n    // const adminList = ['rachelsc', 'clairedu']\n    // const isAdmin = adminList.includes(localStorage.getItem('netid'))\n    // if (isAdmin) {\n    //   addEvent = <AddEventButton/>\n    //   addOrg = <AddOrgButton/>\n    // }\n    // else {\n    //   addEvent = <div></div>\n    //   addOrg = <div></div>\n    // }\n    if (this._isMounted === true) {\n      return (\n        <MuiThemeProvider theme={Theme}>\n          <div className='CalendarPage'>\n\n            <div className = \"full-width\">\n              <header className=\"calendarhead\">\n              </header>\n              <br></br>\n\n              <div className='CalendarOptions'>\n                <div className='FilterItemsTitle'>\n                  <Typography className=\"month\" variant=\"subtitle1\" color=\"primary\">\n                    Filter Events\n                  </Typography>\n                </div>\n                <div className='FilterItems'>\n                  <div className='Menu'>\n                    <DropdownMultiple\n                      titleHelper=\"location\"\n                      title=\"Locations\"\n                      list={this.state.locations}\n                      updateFilter={this.updateFilter}\n                      selectedList={this.state.locations_selected}\n                    />\n                  </div>\n\n                  <div className='Menu'>\n                    <DropdownMultiple\n                      titleHelper=\"event type\"\n                      title=\"Categories\"\n                      list={this.state.categories}\n                      updateFilter={this.updateFilter}\n                      selectedList={this.state.categories_selected}\n                    />\n                  </div>\n\n                  <div className='Menu'>\n                    <DropdownMultiple\n                      titleHelper=\"organization\"\n                      title=\"Organizations\"\n                      list={this.state.organizations}\n                      updateFilter={this.updateFilter}\n                      selectedList={this.state.organizations_selected}\n                    />\n                  </div>\n\n                  <FormGroup row>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={this.state.checkedFree}\n                          onChange={this.handleCheckFree}\n                          value=\"checkedA\"\n                          color=\"primary\"\n                        />\n                      }\n                      label=\"Free Events\"\n                    />\n\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={this.state.checkedFav}\n                          onChange={this.handleCheckFav}\n                          value=\"checkedA\"\n                          color=\"primary\"\n                        />\n                      }\n                      label=\"Favorites\"\n                    />\n\n                  </FormGroup>\n                </div>\n              </div>\n\n              <div className = \"AddButtons\">\n                {addEvent}\n                {addOrg}\n              </div>\n              \n            </div>\n\n            <div className='Calendar'>\n              {this.renderCalendar()}\n            </div>\n          </div>\n\n        </MuiThemeProvider>\n      )\n    } else {\n      return (\n        <div></div> /* Try loading sign */\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    changed_view: state.calReducer.changed_view,\n    organizations_selected: state.calReducer.organizations_selected,\n    categories_selected: state.calReducer.categories_selected,\n    locations_selected: state.calReducer.locations_selected,\n    month: state.calReducer.month,\n    checked_free: state.calReducer.checked_free,\n    checked_fav: state.calReducer.checked_fav,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeToDetails: (event, month, organizations, categories, locations, checked_free, checked_fav) => dispatch({\n      type: 'changeToDetails',\n      payload: {\n        title: event.title,\n        start: event.start,\n        end: event.end,\n        desc: event.desc,\n        loc: event.loc,\n        website: event.website,\n        org: event.org,\n        is_free: event.is_free,\n        cat: event.cat,\n        month: month,\n        categories_selected: categories,\n        organizations_selected: organizations,\n        locations_selected: locations,\n        changed_view: true,\n        checked_free: checked_free,\n        checked_fav: checked_fav\n      }\n    })\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Calendar))\n"]},"metadata":{},"sourceType":"module"}