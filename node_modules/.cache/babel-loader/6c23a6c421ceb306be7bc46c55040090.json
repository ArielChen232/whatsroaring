{"ast":null,"code":"import _defineProperty from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/leitan/Developer/whatsroaring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/leitan/Developer/whatsroaring/src/Pages/Components/DropdownMultiple.js\";\nimport React, { Component } from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport onClickOutside from \"react-onclickoutside\";\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Theme from '../../Assets/Theme';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport './DropdownMultiple.css';\n\nvar DropdownMultiple =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DropdownMultiple, _Component);\n\n  function DropdownMultiple(props) {\n    var _this;\n\n    _classCallCheck(this, DropdownMultiple);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropdownMultiple).call(this, props));\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.state = {\n      listOpen: false,\n      headerTitle: _this.props.title,\n      selectedList: []\n    };\n    return _this;\n  }\n\n  _createClass(DropdownMultiple, [{\n    key: \"handleClickOutside\",\n    value: function handleClickOutside() {\n      this.setState({\n        listOpen: false\n      });\n    }\n  }, {\n    key: \"toggleList\",\n    value: function toggleList() {\n      this.setState(function (prevState) {\n        return {\n          listOpen: !prevState.listOpen\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          list = _this$props.list,\n          toggleItem = _this$props.toggleItem;\n      var _this$state = this.state,\n          listOpen = _this$state.listOpen,\n          headerTitle = _this$state.headerTitle;\n      return React.createElement(MuiThemeProvider, {\n        theme: Theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"select-multiple-checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, headerTitle), React.createElement(Select, {\n        multiple: true,\n        value: this.state.selectedList,\n        onChange: this.handleChange('selectedList'),\n        input: React.createElement(Input, {\n          id: \"select-multiple-checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }),\n        renderValue: function renderValue(selected) {\n          return selected.length + ' selected';\n        } //className={classes.select}\n        //MenuProps={MenuProps}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, list.map(function (item) {\n        return React.createElement(MenuItem, {\n          key: item.title,\n          value: item.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: _this2.state.selectedList.indexOf(item.title) > -1,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          primary: item.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }));\n      })))\n      /*<div className=\"dd-wrapper\">\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\n            <div className=\"dd-header-title\">{headerTitle}</div>\n            {listOpen\n              ? <FontAwesome name=\"angle-up\" size=\"2x\"/>\n              : <FontAwesome name=\"angle-down\" size=\"2x\"/>\n            }\n        </div>\n       {listOpen && <ul className=\"dd-list\">\n         {list.map((item) => (\n           <li className=\"dd-list-item\" key={item.title} onClick={() => toggleItem(item.id, item.key)}>\n            {item.selected && \"*\"} {item.title}\n           </li>\n          ))}\n        </ul>}\n      </div>*/\n      ;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      var count = nextProps.list.filter(function (a) {\n        return a.selected;\n      }).length;\n\n      if (count === 0) {\n        return {\n          headerTitle: nextProps.title\n        };\n      } else if (count === 1) {\n        return {\n          headerTitle: \"\".concat(count, \" \").concat(nextProps.titleHelper)\n        };\n      } else if (count > 1) {\n        return {\n          headerTitle: \"\".concat(count, \" \").concat(nextProps.titleHelper, \"s\")\n        };\n      }\n    }\n  }]);\n\n  return DropdownMultiple;\n}(Component);\n\nexport default onClickOutside(DropdownMultiple);","map":{"version":3,"sources":["/Users/leitan/Developer/whatsroaring/src/Pages/Components/DropdownMultiple.js"],"names":["React","Component","FontAwesome","onClickOutside","MuiThemeProvider","Theme","InputLabel","MenuItem","Select","Input","ListItemText","Checkbox","DropdownMultiple","props","handleChange","name","event","setState","target","value","state","listOpen","headerTitle","title","selectedList","prevState","list","toggleItem","selected","length","map","item","indexOf","nextProps","count","filter","a","titleHelper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport FontAwesome from 'react-fontawesome'\nimport onClickOutside from \"react-onclickoutside\"\n\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport Theme from '../../Assets/Theme'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport Input from '@material-ui/core/Input'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Checkbox from '@material-ui/core/Checkbox'\n\n\nimport './DropdownMultiple.css'\n\nclass DropdownMultiple extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      listOpen: false,\n      headerTitle: this.props.title,\n      selectedList: [],\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    const count = nextProps.list.filter(function(a) { return a.selected; }).length;\n    if(count === 0){\n      return {headerTitle: nextProps.title}\n    }\n    else if(count === 1){\n      return {headerTitle: `${count} ${nextProps.titleHelper}`}\n    }\n    else if(count > 1){\n      return {headerTitle: `${count} ${nextProps.titleHelper}s`}\n    }\n  }\n\n  handleClickOutside() {\n    this.setState({\n      listOpen: false\n    })\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen\n    }))\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    })\n  }\n\n  render() {\n    const{list, toggleItem} = this.props\n    const{listOpen, headerTitle} = this.state\n    return (\n      <MuiThemeProvider theme={Theme}>\n        <InputLabel htmlFor=\"select-multiple-checkbox\">{headerTitle}</InputLabel>\n        <Select\n          multiple\n          value={this.state.selectedList}\n          onChange={this.handleChange('selectedList')}\n          input={<Input id=\"select-multiple-checkbox\" />}\n          renderValue={selected => selected.length + ' selected'}\n          //className={classes.select}\n          //MenuProps={MenuProps}\n        >\n          {list.map(item => (\n            <MenuItem key={item.title} value={item.title}>\n              <Checkbox checked={this.state.selectedList.indexOf(item.title) > -1} color='primary'/>\n              <ListItemText primary={item.title} />\n            </MenuItem>\n          ))}\n        </Select>\n      </MuiThemeProvider>\n      /*<div className=\"dd-wrapper\">\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\n            <div className=\"dd-header-title\">{headerTitle}</div>\n            {listOpen\n              ? <FontAwesome name=\"angle-up\" size=\"2x\"/>\n              : <FontAwesome name=\"angle-down\" size=\"2x\"/>\n            }\n        </div>\n       {listOpen && <ul className=\"dd-list\">\n         {list.map((item) => (\n           <li className=\"dd-list-item\" key={item.title} onClick={() => toggleItem(item.id, item.key)}>\n            {item.selected && \"*\"} {item.title}\n           </li>\n          ))}\n        </ul>}\n      </div>*/\n    )\n  }\n\n}\n\nexport default onClickOutside(DropdownMultiple);\n"]},"metadata":{},"sourceType":"module"}